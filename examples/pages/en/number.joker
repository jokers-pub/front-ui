<template>
    <div ref="container" class="joker-demo-container">
        <h2>InputNumber Counter</h2>
        <p>Only allows input of standard numeric values within a definable range.</p>
        <h3>Basic Usage</h3>
        <p>
            To use it, simply bind a variable to
            <code>value</code>
            in the
            <code>jk-number</code>
            element. The initial value of the variable will be the default value.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:200px;&quot;&gt;
        &lt;jk-number value=&quot;1&quot; /&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Disabled State</h3>
        <p>
            The
            <code>disabled</code>
            property accepts a
            <code>Boolean</code>
            . Setting it to
            <code>true</code>
            disables the entire component. If you only need to restrict values within a specific range, you can set the
            <code>min</code>
            and
            <code>max</code>
            properties. If
            <code>min</code>
            and
            <code>max</code>
            are not set, the minimum value defaults to 0.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:200px;&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-number value=&quot;1&quot; disabled /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number value=&quot;1&quot; min=&quot;1&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number value=&quot;2&quot; max=&quot;2&quot; /&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Step</h3>
        <p>Allows defining increment/decrement step control.</p>
        <p>
            Set the
            <code>step</code>
            property to control the step size. It accepts a
            <code>Number</code>
            .
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:200px;&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-number value=&quot;1&quot; step=&quot;2&quot; /&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Strict Step</h3>
        <p>
            The
            <code>step-strictly</code>
            property accepts a
            <code>Boolean</code>
            . If set to
            <code>true</code>
            , only multiples of the step value can be entered.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:200px;&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-number value=&quot;0&quot; step=&quot;2&quot; step-strictly /&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Precision</h3>
        <p>
            Set the
            <code>precision</code>
            property to control the numerical precision. It accepts a
            <code>Number</code>
            .
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:200px;&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-number value=&quot;0.1&quot; precision=&quot;1&quot; step=&quot;0.1&quot; max=&quot;1&quot; min=&quot;0&quot; /&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <blockquote>
            <p>
                The value of
                <code>precision</code>
                must be a non-negative integer and should not be less than the number of decimal places in
                <code>step</code>
                .
            </p>
        </blockquote>
        <h3>Sizes</h3>
        <p>
            Additional numeric input box sizes are available:
            <code>medium</code>
            ,
            <code>small</code>
            , and
            <code>mini</code>
            .
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo6)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:200px;&quot;&gt;
        &lt;div class=&quot;demo-container&quot;&gt;
            &lt;DemoRow&gt;
                &lt;jk-number /&gt;
            &lt;/DemoRow&gt;
            &lt;DemoRow&gt;
                &lt;jk-number size=&quot;medium&quot; /&gt;
            &lt;/DemoRow&gt;
            &lt;DemoRow&gt;
                &lt;jk-number size=&quot;small&quot; /&gt;
            &lt;/DemoRow&gt;
            &lt;DemoRow&gt;
                &lt;jk-number size=&quot;mini&quot; /&gt;
            &lt;/DemoRow&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
:deep(.demo-container .jk-number) {
    margin-right: 15px;
}
&lt;/style&gt;

</code></pre>
        </DemoContainer>
        <h3>Button Position</h3>
        <p>
            Set the
            <code>controls-position</code>
            property to specify the position of the buttons.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo7)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot; style=&quot;width:200px;&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-number controls-position=&quot;right&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number size=&quot;medium&quot; controls-position=&quot;right&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number size=&quot;small&quot; controls-position=&quot;right&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number size=&quot;mini&quot; controls-position=&quot;right&quot; /&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
:deep(.demo-container .jk-number) {
    margin-right: 15px;
}
&lt;/style&gt;

</code></pre>
        </DemoContainer>
        <h3>No Control Buttons</h3>
        <p>
            Set the
            <code>hidden-controls</code>
            property to hide the control buttons.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo8)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot; style=&quot;width:200px;&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls placeholder=&quot;Please enter content&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls size=&quot;medium&quot; placeholder=&quot;Please enter content&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls size=&quot;small&quot; placeholder=&quot;Please enter content&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls size=&quot;mini&quot; placeholder=&quot;Please enter content&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls placeholder=&quot;Please enter content&quot;&gt;
                @section(&quot;prepend&quot;) {
                    Font size
                }
                @section(&quot;append&quot;) {
                    px
                }
            &lt;/jk-number&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls size=&quot;medium&quot; placeholder=&quot;Please enter content&quot;&gt;
                @section(&quot;prepend&quot;) {
                    Font size
                }
                @section(&quot;append&quot;) {
                    px
                }
            &lt;/jk-number&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls size=&quot;small&quot; placeholder=&quot;Please enter content&quot;&gt;
                @section(&quot;prepend&quot;) {
                    Font size
                }
                @section(&quot;append&quot;) {
                    px
                }
            &lt;/jk-number&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls size=&quot;mini&quot; placeholder=&quot;Please enter content&quot;&gt;
                @section(&quot;prepend&quot;) {
                    Font size
                }
                @section(&quot;append&quot;) {
                    px
                }
            &lt;/jk-number&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
:deep(.demo-container .jk-number) {
    margin-right: 15px;
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Optional Values</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>value</td>
                    <td>Bound value</td>
                    <td>number</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>class</td>
                    <td>Custom class style</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>min</td>
                    <td>Minimum allowed value</td>
                    <td>number</td>
                    <td>—</td>
                    <td>-Infinity</td>
                </tr>
                <tr>
                    <td>max</td>
                    <td>Maximum allowed value</td>
                    <td>number</td>
                    <td>—</td>
                    <td>Infinity</td>
                </tr>
                <tr>
                    <td>step</td>
                    <td>Step size</td>
                    <td>number</td>
                    <td>—</td>
                    <td>1</td>
                </tr>
                <tr>
                    <td>step-strictly</td>
                    <td>Whether to allow only step multiples</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>precision</td>
                    <td>Numerical precision</td>
                    <td>number</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>size</td>
                    <td>Size of the counter</td>
                    <td>string</td>
                    <td>large, small</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>Whether the counter is disabled</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>hidden-controls</td>
                    <td>Whether to hide control buttons</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>controls-position</td>
                    <td>Position of control buttons</td>
                    <td>string</td>
                    <td>right</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>name</td>
                    <td>Native attribute</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>label</td>
                    <td>Label text associated with input</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>placeholder</td>
                    <td>Default placeholder for input</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>fullWidth</td>
                    <td>Whether to set width to 100%</td>
                    <td>boolean</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
            </tbody>
        </table>
        <h3>Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Event Name</th>
                    <th>Description</th>
                    <th>Callback Parameters</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>change</td>
                    <td>Triggers when the bound value changes</td>
                    <td>currentValue, oldValue</td>
                </tr>
                <tr>
                    <td>blur</td>
                    <td>Triggers when Input loses focus</td>
                    <td>VNode.Event</td>
                </tr>
                <tr>
                    <td>focus</td>
                    <td>Triggers when Input gains focus</td>
                    <td>VNode.Event</td>
                </tr>
            </tbody>
        </table>
        <h3>Methods</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Method</th>
                    <th>Description</th>
                    <th>Parameters</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>blur</td>
                    <td>Makes input lose focus</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>focus</td>
                    <td>Makes input gain focus</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>select</td>
                    <td>Selects text in the input</td>
                    <td>—</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo8 from "../../components/number/demo8.joker";
import DEMO_JOKER_demo7 from "../../components/number/demo7.joker";
import DEMO_JOKER_demo6 from "../../components/number/demo6.joker";
import DEMO_JOKER_demo5 from "../../components/number/demo5.joker";
import DEMO_JOKER_demo4 from "../../components/number/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/number/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/number/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/number/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo8,
        DEMO_JOKER_demo7,
        DEMO_JOKER_demo6,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>
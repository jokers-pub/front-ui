<template>
<div ref='container' class='joker-demo-container'>
<h2>InputNumber</h2>
<p>Only allows the input of standard numeric values, and the range can be defined.</p>
<h3>Basic Usage</h3>
<p>To use it, simply bind a variable to <code>value</code> in the <code>jk-number</code> element. The initial value of the variable is the default value.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo1)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:200px;&quot;&gt;
        &lt;jk-number value=&quot;1x&quot; /&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Disabled State</h3>
<p>The <code>disabled</code> attribute accepts a <code>Boolean</code>. Setting it to <code>true</code> disables the entire component. If you only need to control the value within a certain range, you can set the <code>min</code> and <code>max</code> attributes. When <code>min</code> and <code>max</code> are not set, the minimum value is 0.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo2)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:200px;&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-number value=&quot;1&quot; disabled /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number value=&quot;1&quot; min=&quot;1&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number value=&quot;2&quot; max=&quot;2&quot; /&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Step</h3>
<p>Allows the definition of step-by-step control for incrementing and decrementing.</p>
<p>Setting the <code>step</code> attribute can control the step size, which accepts a <code>Number</code>.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo3)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:200px;&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-number value=&quot;1&quot; step=&quot;2&quot; /&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Strict Step</h3>
<p>The <code>step-strictly</code> attribute accepts a <code>Boolean</code>. If this attribute is set to <code>true</code>, only multiples of the step can be entered.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo4)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:200px;&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-number value=&quot;0&quot; step=&quot;2&quot; step-strictly /&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Precision</h3>
<p>Setting the <code>precision</code> attribute can control the numerical precision, which accepts a <code>Number</code>.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo5)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:200px;&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-number value=&quot;0.1&quot; precision=&quot;1&quot; step=&quot;0.1&quot; max=&quot;1&quot; min=&quot;0&quot; /&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<blockquote>
<p>The value of <code>precision</code> must be a non-negative integer and cannot be less than the number of decimal places of <code>step</code>.</p>
</blockquote>
<h3>Size</h3>
<p>Three additional sizes of numeric input boxes are provided: <code>medium</code>, <code>small</code>, and <code>mini</code>.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo6)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:200px;&quot;&gt;
        &lt;div class=&quot;demo-container&quot;&gt;
            &lt;DemoRow&gt;
                &lt;jk-number /&gt;
            &lt;/DemoRow&gt;
            &lt;DemoRow&gt;
                &lt;jk-number size=&quot;medium&quot; /&gt;
            &lt;/DemoRow&gt;
            &lt;DemoRow&gt;
                &lt;jk-number size=&quot;small&quot; /&gt;
            &lt;/DemoRow&gt;
            &lt;DemoRow&gt;
                &lt;jk-number size=&quot;mini&quot; /&gt;
            &lt;/DemoRow&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
:deep(.demo-container .jk-number) {
    margin-right: 15px;
}
&lt;/style&gt;

</code></pre>
</DemoContainer>
<h3>Button Position</h3>
<p>Setting the <code>controls-position</code> attribute can control the position of the buttons.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo7)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot; style=&quot;width:200px;&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-number controls-position=&quot;right&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number size=&quot;medium&quot; controls-position=&quot;right&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number size=&quot;small&quot; controls-position=&quot;right&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number size=&quot;mini&quot; controls-position=&quot;right&quot; /&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
:deep(.demo-container .jk-number) {
    margin-right: 15px;
}
&lt;/style&gt;

</code></pre>
</DemoContainer>
<h3>No Control Buttons</h3>
<p>Setting the <code>hidden-controls</code> attribute can control the position of the buttons.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo8)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot; style=&quot;width:200px;&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls placeholder=&quot;请输入内容&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls size=&quot;medium&quot; placeholder=&quot;请输入内容&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls size=&quot;small&quot; placeholder=&quot;请输入内容&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls size=&quot;mini&quot; placeholder=&quot;请输入内容&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls placeholder=&quot;请输入内容&quot;&gt;
                @section(&quot;prepend&quot;) {
                    字号
                }
                @section(&quot;append&quot;) {
                    px
                }
            &lt;/jk-number&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls size=&quot;medium&quot; placeholder=&quot;请输入内容&quot;&gt;
                @section(&quot;prepend&quot;) {
                    字号
                }
                @section(&quot;append&quot;) {
                    px
                }
            &lt;/jk-number&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls size=&quot;small&quot; placeholder=&quot;请输入内容&quot;&gt;
                @section(&quot;prepend&quot;) {
                    字号
                }
                @section(&quot;append&quot;) {
                    px
                }
            &lt;/jk-number&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-number hiddenControls size=&quot;mini&quot; placeholder=&quot;请输入内容&quot;&gt;
                @section(&quot;prepend&quot;) {
                    字号
                }
                @section(&quot;append&quot;) {
                    px
                }
            &lt;/jk-number&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
:deep(.demo-container .jk-number) {
    margin-right: 15px;
}
&lt;/style&gt;

</code></pre>
</DemoContainer>
<h3>Attributes</h3>
<table class="mkd-table">
<thead>
<tr>
<th>Parameter</th>
<th>Description</th>
<th>Type</th>
<th>Optional Values</th>
<th>Default Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>value</td>
<td>Bound value</td>
<td>number</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>class</td>
<td>Custom class style</td>
<td>string</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>min</td>
<td>Set the minimum value allowed by the counter</td>
<td>number</td>
<td>—</td>
<td>-Infinity</td>
</tr>
<tr>
<td>max</td>
<td>Set the maximum value allowed by the counter</td>
<td>number</td>
<td>—</td>
<td>Infinity</td>
</tr>
<tr>
<td>step</td>
<td>Counter step size</td>
<td>number</td>
<td>—</td>
<td>1</td>
</tr>
<tr>
<td>step-strictly</td>
<td>Whether only multiples of step can be entered</td>
<td>boolean</td>
<td>—</td>
<td>false</td>
</tr>
<tr>
<td>precision</td>
<td>Numerical precision</td>
<td>number</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>size</td>
<td>Counter size</td>
<td>string</td>
<td>large, small</td>
<td>—</td>
</tr>
<tr>
<td>disabled</td>
<td>Whether to disable the counter</td>
<td>boolean</td>
<td>—</td>
<td>false</td>
</tr>
<tr>
<td>hidden-controls</td>
<td>Whether to hide the control buttons</td>
<td>boolean</td>
<td>—</td>
<td>false</td>
</tr>
<tr>
<td>controls-position</td>
<td>Position of the control buttons</td>
<td>string</td>
<td>right</td>
<td>-</td>
</tr>
<tr>
<td>name</td>
<td>Native attribute</td>
<td>string</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>label</td>
<td>The label text associated with the input box</td>
<td>string</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>placeholder</td>
<td>Default placeholder of the input box</td>
<td>string</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>fullWidth</td>
<td>Whether the width is 100%</td>
<td>boolean</td>
<td>-</td>
<td>-</td>
</tr>
</tbody>
</table>
<h3>Events</h3>
<table class="mkd-table">
<thead>
<tr>
<th>Event Name</th>
<th>Description</th>
<th>Callback Parameters</th>
</tr>
</thead>
<tbody>
<tr>
<td>change</td>
<td>Triggered when the bound value is changed</td>
<td>currentValue, oldValue</td>
</tr>
<tr>
<td>blur</td>
<td>Triggered when the Input in the component loses focus</td>
<td>VNode.Event</td>
</tr>
<tr>
<td>focus</td>
<td>Triggered when the Input in the component gains focus</td>
<td>VNode.Event</td>
</tr>
</tbody>
</table>
<h3>Methods</h3>
<table class="mkd-table">
<thead>
<tr>
<th>Method Name</th>
<th>Description</th>
<th>Parameter</th>
</tr>
</thead>
<tbody>
<tr>
<td>blur</td>
<td>Make the input lose focus</td>
<td>-</td>
</tr>
<tr>
<td>focus</td>
<td>Make the input gain focus</td>
<td>-</td>
</tr>
<tr>
<td>select</td>
<td>Select the text in the input</td>
<td>—</td>
</tr>
</tbody>
</table>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo8 from '../../components/number/demo8.joker';
import DEMO_JOKER_demo7 from '../../components/number/demo7.joker';
import DEMO_JOKER_demo6 from '../../components/number/demo6.joker';
import DEMO_JOKER_demo5 from '../../components/number/demo5.joker';
import DEMO_JOKER_demo4 from '../../components/number/demo4.joker';
import DEMO_JOKER_demo3 from '../../components/number/demo3.joker';
import DEMO_JOKER_demo2 from '../../components/number/demo2.joker';
import DEMO_JOKER_demo1 from '../../components/number/demo1.joker';
export default class extends Component {
components={
BottomNav,
DEMO_JOKER_demo8,
DEMO_JOKER_demo7,
DEMO_JOKER_demo6,
DEMO_JOKER_demo5,
DEMO_JOKER_demo4,
DEMO_JOKER_demo3,
DEMO_JOKER_demo2,
DEMO_JOKER_demo1
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>
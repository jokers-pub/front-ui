<template>
    <div ref="container" class="joker-demo-container">
        <h2>DatePicker</h2>
        <p>A component for selecting or inputting dates</p>
        <h3>Date Selection</h3>
        <p>Basic date selection control with &quot;day&quot; as the fundamental unit</p>
        <p>
            The basic unit is specified by the
            <code>type</code>
            property. Quick options can be configured via
            <code>shortcuts</code>
            . Disabled dates are set using
            <code>disabledDate</code>
            , which is a function that returns a
            <code>boolean</code>
            to determine availability.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-date-picker placeholder=&quot;Please select a date&quot;&gt;&lt;/jk-date-picker&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-date-picker
            placeholder=&quot;Date picker with quick commands&quot;
            shortcuts=&quot;@shortcuts&quot;
            format=&quot;YYYY-MM-DD&quot;
            value=&quot;2023-09-27&quot;
            disabledDate=&quot;@disabledDate&quot;&gt;&lt;/jk-date-picker&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;

&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    shortcuts = [
        {
            text: &quot;Today&quot;,
            onClick: (callBack: Function) =&gt; {
                callBack(new Date());
            }
        },
        {
            text: &quot;Yesterday&quot;,
            onClick: (callBack: Function) =&gt; {
                let date = new Date();
                date.setTime(date.getTime() - 3600 * 1000 * 24);

                callBack(date);
            }
        },
        {
            text: &quot;One week ago&quot;,
            onClick(callBack: Function) {
                let date = new Date();
                date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);

                callBack(date);
            }
        }
    ];

    disabledDate(date: Date) {
        return this.getDateValue(date) &gt; this.getDateValue(new Date());
    }

    getDateValue(date: Date) {
        return new Date(date.getFullYear(), date.getMonth(), date.getDate());
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>Other Date Units</h3>
        <p>By extending the basic date picker, week, month, and year selections are supported.</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demoContainer&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;span&gt;Month:&lt;/span&gt;
            &lt;jk-date-picker type=&quot;month&quot; placeholder=&quot;Please select a year and month&quot;&gt;&lt;/jk-date-picker&gt;
        &lt;/div&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;span&gt;Week:&lt;/span&gt;
            &lt;jk-date-picker
                format=&quot;YYYY周ww&quot;
                value=&quot;2023-36&quot;
                type=&quot;week&quot;
                showWeekNumber
                placeholder=&quot;Please select a week&quot;&gt;&lt;/jk-date-picker&gt;
        &lt;/div&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;span&gt;Year:&lt;/span&gt;
            &lt;jk-date-picker type=&quot;year&quot; placeholder=&quot;Please select a year&quot;&gt;&lt;/jk-date-picker&gt;
        &lt;/div&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;span&gt;Time:&lt;/span&gt;
            &lt;jk-date-picker type=&quot;datetime&quot; placeholder=&quot;Please select a date and time&quot;&gt;&lt;/jk-date-picker&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
.demoContainer {
    .row {
        padding: 30px 24px;
        overflow: hidden;
        border-bottom: 1px solid #eff2f6;

        span {
            font-size: 14px;
            color: #8492a6;
            line-height: 44px;
            font-size: 16px;
            width: 60px;
            display: inline-block;
        }

        &amp;:last-child {
            border-bottom: none;
        }
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Date Range Selection</h3>
        <p>Conveniently select a date range within a single picker.</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demoContainer&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;span&gt;Default panel:&lt;/span&gt;
            &lt;jk-date-picker
                type=&quot;daterange&quot;
                range-separator=&quot;to&quot;
                startPlaceholder=&quot;Start date&quot;
                endPlaceholder=&quot;End date&quot;&gt;&lt;/jk-date-picker&gt;
        &lt;/div&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;span&gt;Quick commands:&lt;/span&gt;
            &lt;jk-date-picker
                unlinkPanels
                shortcuts=&quot;@shortcuts&quot;
                type=&quot;daterange&quot;
                range-separator=&quot;to&quot;
                startPlaceholder=&quot;Start date&quot;
                endPlaceholder=&quot;End date&quot;&gt;&lt;/jk-date-picker&gt;
        &lt;/div&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;span&gt;Time range:&lt;/span&gt;
            &lt;jk-date-picker
                unlinkPanels
                shortcuts=&quot;@shortcuts&quot;
                type=&quot;datetimerange&quot;
                range-separator=&quot;to&quot;
                startPlaceholder=&quot;Start date&quot;
                endPlaceholder=&quot;End date&quot;&gt;&lt;/jk-date-picker&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    shortcuts = [
        {
            text: &quot;Last week&quot;,
            onClick: (callBack: Function) =&gt; {
                let end = new Date();
                let start = new Date();
                start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
                callBack([start, end]);
            }
        },
        {
            text: &quot;Last month&quot;,
            onClick: (callBack: Function) =&gt; {
                let end = new Date();
                let start = new Date();
                start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
                callBack([start, end]);
            }
        },
        {
            text: &quot;Last three months&quot;,
            onClick(callBack: Function) {
                let end = new Date();
                let start = new Date();
                start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);

                callBack([start, end]);
            }
        }
    ];
}
&lt;/script&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
.demoContainer {
    .row {
        padding: 30px 24px;
        overflow: hidden;
        border-bottom: 1px solid #eff2f6;

        span {
            font-size: 14px;
            color: #8492a6;
            line-height: 44px;
            font-size: 16px;
            display: inline-block;
            width: 150px;
        }

        &amp;:last-child {
            border-bottom: none;
        }
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Date Format</h3>
        <p>
            Use
            <code>format</code>
            to specify the display format in the input box. Use
            <code>value-format</code>
            to control the bound value format.
        </p>
        <p>
            By default, the component accepts and returns
            <code>Date</code>
            objects. Here are the available format strings (using UTC January 2, 2017, 03:04:05 as an example):
        </p>
        <div class="warning">
            <p>
                <strong>Case sensitivity note:</strong>
                Internally,
                <code>dayjs</code>
                is used for date operations and formatting. For detailed format values, refer to
                <a href="https://dayjs.fenxianglu.cn/" target="_blank">dayjs</a>
                .
            </p>
        </div>
        <h3>Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Accepted Values</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>value</td>
                    <td>Binding value</td>
                    <td>string(DatePicker) / Array&lt;string&gt;(DateRangePicker)</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>class</td>
                    <td>Custom CSS class</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>readonly</td>
                    <td>Fully read-only</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>Disabled state</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>editable</td>
                    <td>Allow text input in the field</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>true</td>
                </tr>
                <tr>
                    <td>clearable</td>
                    <td>Whether to show the clear button</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>true</td>
                </tr>
                <tr>
                    <td>size</td>
                    <td>Input field size</td>
                    <td>string</td>
                    <td>large, small, mini</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>placeholder</td>
                    <td>Placeholder for non-range selection</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>start-placeholder</td>
                    <td>Placeholder for the start date in range selection</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>end-placeholder</td>
                    <td>Placeholder for the end date in range selection</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>type</td>
                    <td>Display type</td>
                    <td>string</td>
                    <td>
                        <code>year</code>
                        /
                        <code>month</code>
                        /
                        <code>date</code>
                        /
                        <code>week</code>
                        /
                        <code>datetime</code>
                        /
                        <code>daterange</code>
                        /
                        <code>datetimerange</code>
                    </td>
                    <td>date</td>
                </tr>
                <tr>
                    <td>format</td>
                    <td>Display format in input box</td>
                    <td>string</td>
                    <td>
                        Refer to
                        <a href="https://dayjs.fenxianglu.cn/" target="_blank">Date Format</a>
                    </td>
                    <td>yyyy-MM-dd</td>
                </tr>
                <tr>
                    <td>range-separator</td>
                    <td>Separator in range selection mode</td>
                    <td>string</td>
                    <td>—</td>
                    <td>'-'</td>
                </tr>
                <tr>
                    <td>default-value</td>
                    <td>Optional, default displayed date when opened</td>
                    <td>string</td>
                    <td>
                        Follows
                        <code>value-format</code>
                    </td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>value-format</td>
                    <td>
                        Optional, bound value format. Defaults to
                        <code>Date</code>
                        obj
                    </td>
                    <td>string</td>
                    <td>
                        Refer to
                        <a href="https://dayjs.fenxianglu.cn/" target="_blank">Date Format</a>
                    </td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>unlink-panels</td>
                    <td>Unlink two date panels in range mode</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>prefix-icon</td>
                    <td>Custom icon class for the header</td>
                    <td>string</td>
                    <td>—</td>
                    <td>jk-icon-date</td>
                </tr>
            </tbody>
        </table>
        <h3>Picker Options</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Accepted Values</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>shortcuts</td>
                    <td>
                        Quick options configuration (requires
                        <code>
                            {text, onClick}
                        </code>
                        objects). See demo or table below.
                    </td>
                    <td>Object[]</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>disabledDate</td>
                    <td>
                        Sets disabled state (receives current date, returns
                        <code>boolean</code>
                        )
                    </td>
                    <td>Function</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>cellClassName</td>
                    <td>Sets custom class for date cells</td>
                    <td>Function(Date)</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
            </tbody>
        </table>
        <h3>Shortcuts</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Accepted Values</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>text</td>
                    <td>Title text</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>onClick</td>
                    <td>Receives a callback; executing the callback with a new value applies it</td>
                    <td>function</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
            </tbody>
        </table>
        <h3>Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Event Name</th>
                    <th>Description</th>
                    <th>Callback Parameters</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>change</td>
                    <td>Triggered when user confirms selection</td>
                    <td>
                        Bound value (format matches binding, affected by
                        <code>value-format</code>
                        )
                    </td>
                </tr>
                <tr>
                    <td>blur</td>
                    <td>Triggered when input loses focus</td>
                    <td>Component instance</td>
                </tr>
                <tr>
                    <td>focus</td>
                    <td>Triggered when input gains focus</td>
                    <td>Component instance</td>
                </tr>
            </tbody>
        </table>
        <h3>Methods</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Method</th>
                    <th>Description</th>
                    <th>Parameters</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>focus</td>
                    <td>Focuses the input field</td>
                    <td>—</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo3 from "../../components/date-picker/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/date-picker/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/date-picker/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>
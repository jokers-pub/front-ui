<template>
    <div ref="container" class="joker-demo-container">
        <h2>Tabs</h2>
        <p>Separates content into distinct yet related data categories.</p>
        <h3>Basic Usage</h3>
        <p>Basic and concise tabs configuration.</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-tabs&gt;
        &lt;jk-tab-panel label=&quot;Home&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Home&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Issues&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Issues&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Repository Activity&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Repository Activity&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Settings&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Settings&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Home&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Home&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Issues&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Issues&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Repository Activity&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Repository Activity&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Settings&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Settings&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Home&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Home&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Issues&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Issues&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Repository Activity&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Repository Activity&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Settings&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Settings&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
    &lt;/jk-tabs&gt;
&lt;/template&gt;

&lt;style&gt;
.demo-content {
    font-size: 24px;
    font-weight: bold;
    padding: 20px 10px;
    color: var(--jk-color-text-secondary);
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Placement</h3>
        <p>
            Tab position can be configured via the
            <code>position</code>
            property.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;@model.position&quot; @change=&quot;handlePositionChange&quot;&gt;
            &lt;jk-radio-button value=&quot;top&quot;&gt;top&lt;/jk-radio-button&gt;
            &lt;jk-radio-button value=&quot;right&quot;&gt;right&lt;/jk-radio-button&gt;
            &lt;jk-radio-button value=&quot;bottom&quot;&gt;bottom&lt;/jk-radio-button&gt;
            &lt;jk-radio-button value=&quot;left&quot;&gt;left&lt;/jk-radio-button&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;jk-tabs position=&quot;@model.position&quot;&gt;
        &lt;jk-tab-panel label=&quot;Home&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Home&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Issues&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Issues&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Repository Activity&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Repository Activity&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Settings&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Settings&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
    &lt;/jk-tabs&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        position: &quot;top&quot;
    };

    handlePositionChange(e: VNode.Event&lt;string&gt;) {
        this.model.position = e.data;
    }
}
&lt;/script&gt;
&lt;style&gt;
.demo-content {
    font-size: 24px;
    font-weight: bold;
    padding: 20px 10px;
    color: var(--jk-color-text-secondary);
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Custom Tab Title</h3>
        <p>
            Use the
            <strong>label</strong>
            slot in
            <code>jk-tab-panel</code>
            to customize tab headers.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-tabs&gt;
        &lt;jk-tab-panel&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Shoot&lt;/div&gt;
            @section(&quot;label&quot;) {
                &lt;i class=&quot;jk-icon-s-camera&quot; /&gt;
                Shoot
            }
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Issues&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Issues&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Repository Activity&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Repository Activity&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Settings&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Settings&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
    &lt;/jk-tabs&gt;
&lt;/template&gt;

&lt;style&gt;
.demo-content {
    font-size: 24px;
    font-weight: bold;
    padding: 20px 10px;
    color: var(--jk-color-text-secondary);
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Card Style</h3>
        <p>
            Enable card-style appearance by configuring the
            <code>card</code>
            property.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;@model.position&quot; @change=&quot;handlePositionChange&quot;&gt;
            &lt;jk-radio-button value=&quot;top&quot;&gt;top&lt;/jk-radio-button&gt;
            &lt;jk-radio-button value=&quot;right&quot;&gt;right&lt;/jk-radio-button&gt;
            &lt;jk-radio-button value=&quot;bottom&quot;&gt;bottom&lt;/jk-radio-button&gt;
            &lt;jk-radio-button value=&quot;left&quot;&gt;left&lt;/jk-radio-button&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;jk-tabs position=&quot;@model.position&quot; card&gt;
        &lt;jk-tab-panel label=&quot;Home&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Home&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Issues&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Issues&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Repository Activity&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Repository Activity&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Settings&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Settings&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
    &lt;/jk-tabs&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        position: &quot;top&quot;
    };

    handlePositionChange(e: VNode.Event&lt;string&gt;) {
        this.model.position = e.data;
    }
}
&lt;/script&gt;
&lt;style&gt;
.demo-content {
    font-size: 24px;
    font-weight: bold;
    padding: 20px 10px;
    color: var(--jk-color-text-secondary);
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Accepted Values</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>value</td>
                    <td>Default active tab value (matches tab-panel name)</td>
                    <td>string</td>
                    <td>-</td>
                    <td>â€”</td>
                </tr>
                <tr>
                    <td>card</td>
                    <td>Card styling theme</td>
                    <td>boolean</td>
                    <td>-</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>position</td>
                    <td>Tab positioning</td>
                    <td>string</td>
                    <td>top/bottom/right/left</td>
                    <td>top</td>
                </tr>
                <tr>
                    <td>fullHeight</td>
                    <td>Enables automatic full-height content expansion</td>
                    <td>boolean</td>
                    <td>-</td>
                    <td>false</td>
                </tr>
            </tbody>
        </table>
        <h3>Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Event Name</th>
                    <th>Description</th>
                    <th>Parameters</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>change</td>
                    <td>Triggered when active tab changes</td>
                    <td>Tab item info</td>
                </tr>
                <tr>
                    <td>click</td>
                    <td>Triggered when tab is clicked</td>
                    <td>Tab item info</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo4 from "../../components/tabs/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/tabs/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/tabs/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/tabs/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>
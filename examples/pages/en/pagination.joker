<template>
    <div ref="container" class="joker-demo-container">
        <h2>Pagination</h2>
        <p>When the amount of data is too large, use pagination to split the data.</p>
        <h3>Basic Usage</h3>
        <p>
            Set
            <code>layout</code>
            to specify the elements to be displayed, separated by commas. The layout components will be displayed in order.
        </p>
        <ul>
            <li>
                <code>prev</code>
                for the previous page
            </li>
            <li>
                <code>next</code>
                for the next page
            </li>
            <li>
                <code>pager</code>
                for the page number list
            </li>
            <li>
                <code>jumper</code>
                for jumping to a specific page
            </li>
            <li>
                <code>total</code>
                for the total number of entries
            </li>
            <li>
                <code>sizes</code>
                for setting the number of items displayed per page
            </li>
        </ul>
        <blockquote>
            <p>
                Additionally, a special layout symbol
                <code>-&gt;</code>
                is provided. Elements after
                <code>-&gt;</code>
                will be aligned to the right.
            </p>
        </blockquote>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination total=&quot;50&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination total=&quot;1000&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination total=&quot;1000&quot; currentPage=&quot;25&quot; disabled /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Set Maximum Page Button Count</h3>
        <p>
            By default, when the total number of pages exceeds 7, the Pagination component will collapse excess page buttons. The maximum number of page buttons can be set via the
            <code>pager-count</code>
            property.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination total=&quot;1000&quot; currentPage=&quot;10&quot; pagerCount=&quot;11&quot; pageSize=&quot;20&quot; /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Display Total Number of Entries</h3>
        <p>
            Configure the layout by adding
            <code>total</code>
            to show the total number of entries.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination total=&quot;1000&quot; pageSize=&quot;20&quot; layout=&quot;@(['total', '-&gt;', 'prev', 'pager', 'next'])&quot; /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Set Items Per Page</h3>
        <p>
            Configure the layout by adding
            <code>sizes</code>
            to display options for the number of items per page.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination total=&quot;1000&quot; pageSize=&quot;20&quot; layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes'])&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            pageSizes=&quot;@([5, 15, 25, 35])&quot;
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Display Quick Jumper</h3>
        <p>
            Configure the layout by adding
            <code>jumper</code>
            to enable the quick jump functionality.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Hide Pagination When Only One Page Exists</h3>
        <p>
            Configure
            <code>hide-on-single-page</code>
            to hide pagination when there is only one page.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo6)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-switch value=&quot;@hideOnSinglePage&quot; @change=&quot;handleChange&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination hideOnSinglePage=&quot;@model.hideOnSinglePage&quot; total=&quot;5&quot; pageSize=&quot;10&quot; /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;


&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        hideOnSinglePage: false
    };

    handleChange(e: VNode.Event&lt;boolean&gt;) {
        this.model.hideOnSinglePage = e.data;
    }
}
&lt;/script&gt;

</code></pre>
        </DemoContainer>
        <h3>Small-Size Pagination</h3>
        <p>
            Configure
            <code>small</code>
            to display pagination in a compact size.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo7)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            small
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            small
            disabled
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Pagination with Background Color</h3>
        <p>
            Configure
            <code>background</code>
            to enable pagination with a colored background, following the primary color scheme.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo8)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            background
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            disabled
            background
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            small
            background
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            small
            disabled
            background
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Accepted Values</th>
                    <th>Default Value</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>small</td>
                    <td>Whether to use small pagination style</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>class</td>
                    <td>Custom class styles</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>background</td>
                    <td>Whether to add a background color to pagination buttons</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>page-size</td>
                    <td>Number of items displayed per page</td>
                    <td>number</td>
                    <td>—</td>
                    <td>10</td>
                </tr>
                <tr>
                    <td>total</td>
                    <td>Total number of entries</td>
                    <td>number</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>page-count</td>
                    <td>
                        Total page count. Either
                        <code>total</code>
                        or
                        <code>page-count</code>
                        can be set to enable pagination. If
                        <code>page-sizes</code>
                        is needed, use
                        <code>total</code>
                    </td>
                    <td>Number</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>pager-count</td>
                    <td>
                        Number of page buttons to display. Excess buttons are collapsed when the total pages exceed this value.
                    </td>
                    <td>number</td>
                    <td>Odd number ≥5 and ≤21</td>
                    <td>7</td>
                </tr>
                <tr>
                    <td>current-page</td>
                    <td>Current page number</td>
                    <td>number</td>
                    <td>—</td>
                    <td>1</td>
                </tr>
                <tr>
                    <td>layout</td>
                    <td>Component layout, with child component names separated by commas</td>
                    <td>string[]</td>
                    <td>
                        <code>sizes</code>
                        ,
                        <code>prev</code>
                        ,
                        <code>pager</code>
                        ,
                        <code>next</code>
                        ,
                        <code>jumper</code>
                        ,
                        <code>-&gt;</code>
                        ,
                        <code>total</code>
                        ,
                        <code>section</code>
                    </td>
                    <td>'prev, pager, next, jumper, -&gt;, total'</td>
                </tr>
                <tr>
                    <td>page-sizes</td>
                    <td>Options for the page size selector</td>
                    <td>number[]</td>
                    <td>—</td>
                    <td>[10, 20, 30, 40, 50, 100]</td>
                </tr>
                <tr>
                    <td>prev-text</td>
                    <td>Custom text to replace the default prev icon</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>next-text</td>
                    <td>Custom text to replace the default next icon</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>Whether pagination is disabled</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>hide-on-single-page</td>
                    <td>Whether to hide pagination when there is only one page</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>-</td>
                </tr>
            </tbody>
        </table>
        <h3>Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Event Name</th>
                    <th>Description</th>
                    <th>Callback Parameters</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>size-change</td>
                    <td>Triggered when pageSize changes</td>
                    <td>New page size</td>
                </tr>
                <tr>
                    <td>change</td>
                    <td>Triggered when currentPage changes</td>
                    <td>Current page number</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo8 from "../../components/pagination/demo8.joker";
import DEMO_JOKER_demo7 from "../../components/pagination/demo7.joker";
import DEMO_JOKER_demo6 from "../../components/pagination/demo6.joker";
import DEMO_JOKER_demo5 from "../../components/pagination/demo5.joker";
import DEMO_JOKER_demo4 from "../../components/pagination/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/pagination/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/pagination/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/pagination/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo8,
        DEMO_JOKER_demo7,
        DEMO_JOKER_demo6,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>
<template>
<div ref='container' class='joker-demo-container'>
<h2>Pagination</h2>
<p>When there is too much data, use pagination to break down the data.</p>
<h3>Basic Usage</h3>
<p>Set <code>layout</code> to indicate the content to be displayed, separated by commas. The layout elements will be displayed in sequence.</p>
<ul>
<li><code>prev</code> represents the previous page.</li>
<li><code>next</code> is the next page.</li>
<li><code>pager</code> represents the page number list.</li>
<li><code>jumper</code> is for jumping to a specified page number.</li>
<li><code>total</code> represents the total number of items.</li>
<li><code>sizes</code> is used to set the number of page numbers displayed per page.</li>
</ul>
<blockquote>
<p>In addition, a special layout symbol <code>-&gt;</code> is provided. Elements after <code>-&gt;</code> will be displayed on the right.</p>
</blockquote>
<DemoContainer component="@(components.DEMO_JOKER_demo1)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination total=&quot;50&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination total=&quot;1000&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination total=&quot;1000&quot; currentPage=&quot;25&quot; disabled /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Set the Maximum Number of Page Number Buttons</h3>
<p>By default, when the total number of pages exceeds 7, Pagination will collapse the extra page number buttons. The maximum number of page number buttons can be set through the <code>pager-count</code> attribute.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo2)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination total=&quot;1000&quot; currentPage=&quot;10&quot; pagerCount=&quot;11&quot; pageSize=&quot;20&quot; /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Display the Total Number of Items</h3>
<p>By configuring the layout and adding <code>total</code>, the total number of items can be displayed.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo3)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination total=&quot;1000&quot; pageSize=&quot;20&quot; layout=&quot;@(['total', '-&gt;', 'prev', 'pager', 'next'])&quot; /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Set the Number of Items per Page</h3>
<p>By configuring the layout and adding <code>sizes</code>, the configuration of the number of items per page can be displayed.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo4)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination total=&quot;1000&quot; pageSize=&quot;20&quot; layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes'])&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            pageSizes=&quot;@([5, 15, 25, 35])&quot;
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Display the Direct Jump</h3>
<p>By configuring the layout and adding <code>jumper</code>, the direct jump function can be displayed.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo5)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Hide Pagination When There is Only One Page</h3>
<p>Configure <code>hide-on-single-page</code> to determine whether to hide the pagination when there is less than one page.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo6)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-switch value=&quot;@hideOnSinglePage&quot; @change=&quot;handleChange&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination hideOnSinglePage=&quot;@model.hideOnSinglePage&quot; total=&quot;5&quot; pageSize=&quot;10&quot; /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;


&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        hideOnSinglePage: false
    };

    handleChange(e: VNode.Event&lt;boolean&gt;) {
        this.model.hideOnSinglePage = e.data;
    }
}
&lt;/script&gt;

</code></pre>
</DemoContainer>
<h3>Small-Sized Pagination</h3>
<p>Configure <code>small</code> to display small-sized pagination.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo7)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            small
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            small
            disabled
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Pagination with Background Color</h3>
<p>Configure <code>background</code> to display pagination with a background color. The background color follows the main color rule.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo8)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            background
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            disabled
            background
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            small
            background
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-pagination
            total=&quot;1000&quot;
            pageSize=&quot;20&quot;
            small
            disabled
            background
            layout=&quot;@(['total', 'prev', 'pager', 'next', '-&gt;', 'sizes', 'jumper'])&quot;
        /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Attributes</h3>
<table class="mkd-table">
<thead>
<tr>
<th>Parameter</th>
<th>Description</th>
<th>Type</th>
<th>Optional Values</th>
<th>Default Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>small</td>
<td>Whether to use the small-sized pagination style</td>
<td>boolean</td>
<td>—</td>
<td>false</td>
</tr>
<tr>
<td>class</td>
<td>Custom class style</td>
<td>string</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>background</td>
<td>Whether to add a background color to the pagination buttons</td>
<td>boolean</td>
<td>—</td>
<td>false</td>
</tr>
<tr>
<td>page-size</td>
<td>The number of items displayed per page</td>
<td>number</td>
<td>—</td>
<td>10</td>
</tr>
<tr>
<td>total</td>
<td>The total number of items</td>
<td>number</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>page-count</td>
<td>The total number of pages. Setting either <code>total</code> or <code>page-count</code> can achieve the function of displaying page numbers; if you want to support changes in <code>page-sizes</code>, you need to use the <code>total</code> attribute</td>
<td>Number</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>pager-count</td>
<td>The number of page number buttons. When the total number of pages exceeds this value, it will be collapsed</td>
<td>number</td>
<td>Odd numbers greater than or equal to 5 and less than or equal to 21</td>
<td>7</td>
</tr>
<tr>
<td>current-page</td>
<td>The current page number, supports the <code>.sync</code> modifier</td>
<td>number</td>
<td>—</td>
<td>1</td>
</tr>
<tr>
<td>layout</td>
<td>The component layout, with sub-component names separated by commas</td>
<td>string[]</td>
<td><code>sizes</code>, <code>prev</code>, <code>pager</code>, <code>next</code>, <code>jumper</code>, <code>-&gt;</code>, <code>total</code>, <code>section</code></td>
<td>'prev, pager, next, jumper, -&gt;, total'</td>
</tr>
<tr>
<td>page-sizes</td>
<td>The option settings for the number-of-items-per-page selector</td>
<td>number[]</td>
<td>—</td>
<td>[10, 20, 30, 40, 50, 100]</td>
</tr>
<tr>
<td>prev-text</td>
<td>The text for the previous page instead of the icon</td>
<td>string</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>next-text</td>
<td>The text for the next page instead of the icon</td>
<td>string</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>disabled</td>
<td>Whether to disable</td>
<td>boolean</td>
<td>—</td>
<td>false</td>
</tr>
<tr>
<td>hide-on-single-page</td>
<td>Whether to hide when there is only one page</td>
<td>boolean</td>
<td>—</td>
<td>-</td>
</tr>
</tbody>
</table>
<h3>Events</h3>
<table class="mkd-table">
<thead>
<tr>
<th>Event Name</th>
<th>Description</th>
<th>Callback Parameters</th>
</tr>
</thead>
<tbody>
<tr>
<td>size-change</td>
<td>Triggered when the <code>pageSize</code> changes</td>
<td>Number of items per page</td>
</tr>
<tr>
<td>change</td>
<td>Triggered when the <code>currentPage</code> changes</td>
<td>Current page</td>
</tr>
</tbody>
</table>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo8 from '../../components/pagination/demo8.joker';
import DEMO_JOKER_demo7 from '../../components/pagination/demo7.joker';
import DEMO_JOKER_demo6 from '../../components/pagination/demo6.joker';
import DEMO_JOKER_demo5 from '../../components/pagination/demo5.joker';
import DEMO_JOKER_demo4 from '../../components/pagination/demo4.joker';
import DEMO_JOKER_demo3 from '../../components/pagination/demo3.joker';
import DEMO_JOKER_demo2 from '../../components/pagination/demo2.joker';
import DEMO_JOKER_demo1 from '../../components/pagination/demo1.joker';
export default class extends Component {
components={
BottomNav,
DEMO_JOKER_demo8,
DEMO_JOKER_demo7,
DEMO_JOKER_demo6,
DEMO_JOKER_demo5,
DEMO_JOKER_demo4,
DEMO_JOKER_demo3,
DEMO_JOKER_demo2,
DEMO_JOKER_demo1
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>
<template>
<div ref='container' class='joker-demo-container'>
<h2>Alert</h2>
<p>Used to display important prompt information on the page.</p>
<h3>Basic Usage</h3>
<p>It is a non-floating element on the page and will not disappear automatically.
The Alert component provides four themes, specified by the <code>type</code> attribute, with the default value being <code>info</code>.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo1)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for success prompt&quot; type=&quot;success&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for message prompt&quot; type=&quot;info&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for warning prompt&quot; type=&quot;warning&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for error prompt&quot; type=&quot;error&quot; /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Themes</h3>
<p>The Alert component offers two different themes: <code>light</code> and <code>dark</code>.
Change the theme by setting the <code>effect</code> attribute, with the default being <code>light</code>.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo2)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for success prompt&quot; type=&quot;success&quot; effect=&quot;dark&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for message prompt&quot; type=&quot;info&quot; effect=&quot;dark&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for warning prompt&quot; type=&quot;warning&quot; effect=&quot;dark&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for error prompt&quot; type=&quot;error&quot; effect=&quot;dark&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Custom Close Button</h3>
<p>Customize the close button to be text or other symbols.
In the Alert component, you can set whether it is closable, the text of the close button, and the callback function when closing. The <code>closable</code> attribute determines whether it is closable, accepting a <code>boolean</code> value, with the default being <code>true</code>. You can set the <code>closeText</code> attribute to replace the close icon on the right. Note: <code>closeText</code> must be text. Set the <code>close</code> event to set the callback when closing.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo3)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Non - closable alert&quot; type=&quot;success&quot; closable=&quot;@false&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Custom close - text&quot; type=&quot;info&quot; closeText=&quot;Got it&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Alert with callback set&quot; type=&quot;warning&quot; @close=&quot;hello&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {};
    hello() {
        alert(&quot;Hello World!&quot;);
    }
}
&lt;/script&gt;
</code></pre>
</DemoContainer>
<h3>With Icon</h3>
<p>Improve readability when indicating a certain state.
Display the icon of the Alert by setting the <code>showIcon</code> attribute, which can more effectively show your display intention to users.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo4)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for success prompt&quot; type=&quot;success&quot; showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for message prompt&quot; type=&quot;info&quot; showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for warning prompt&quot; type=&quot;warning&quot; showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for error prompt&quot; type=&quot;error&quot; showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Center-aligned Text</h3>
<p>Use the <code>center</code> attribute to center the text horizontally.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo5)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for success prompt&quot; type=&quot;success&quot; center showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for message prompt&quot; type=&quot;info&quot; center showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for warning prompt&quot; type=&quot;warning&quot; center showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for error prompt&quot; type=&quot;error&quot; center showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>With Supplementary Text Introduction</h3>
<p>Contains a title and content to explain the warning in more detail.
In addition to the required <code>title</code> attribute, you can set the <code>description</code> attribute to help with a better introduction, which we call supplementary text. The supplementary text can only hold single-line text and will be displayed with automatic line breaks.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo6)">
<pre><code class="language-html">&lt;template&gt;
    &lt;jk-alert
        title=&quot;With auxiliary text introduction&quot;
        type=&quot;success&quot;
        description=&quot;This is some supplementary information. Success often comes from hard work and perseverance. Keep up the good work and you'll achieve your goals!&quot;&gt;&lt;/jk-alert&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>With Icon and Supplementary Text Introduction</h3>
<p>Finally, this is an example with both an icon and supplementary text.</p>
<DemoContainer component="@(components.DEMO_JOKER_demo7)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert
            title=&quot;Text for success prompt&quot;
            type=&quot;success&quot;
            description=&quot;Congratulations! The operation was completed successfully. All data has been saved without any issues.&quot;
            showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert
            title=&quot;Text for message prompt&quot;
            type=&quot;info&quot;
            description=&quot;Please note that the system will be undergoing maintenance tonight from 10 PM to 2 AM. Plan your work accordingly.&quot;
            showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert
            title=&quot;Text for warning prompt&quot;
            type=&quot;warning&quot;
            description=&quot;Your account's password is about to expire. Please change it as soon as possible to ensure account security.&quot;
            showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert
            title=&quot;Text for error prompt&quot;
            type=&quot;error&quot;
            description=&quot;An error occurred while processing your request. Please check your network connection and try again.&quot;
            showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert
            title=&quot;Text for error prompt&quot;
            type=&quot;error&quot;
            description=&quot;An unexpected error has happened. Our technical team has been notified and will resolve it shortly.&quot;
            showIcon&gt;
            @section(&quot;title&quot;) {
                I'm the section title
            }
        &lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Attributes</h3>
<table class="mkd-table">
<thead>
<tr>
<th>Parameter</th>
<th>Description</th>
<th>Type</th>
<th>Optional Values</th>
<th>Default Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td>Title</td>
<td>string</td>
<td>-</td>
<td>—</td>
</tr>
<tr>
<td>type</td>
<td>Theme</td>
<td>string</td>
<td>success/warning/info/error</td>
<td>info</td>
</tr>
<tr>
<td>description</td>
<td>Supplementary text. Can also be passed in through the default section</td>
<td>string</td>
<td>—</td>
<td>-</td>
</tr>
<tr>
<td>closable</td>
<td>Whether it is closable</td>
<td>boolean</td>
<td>—</td>
<td>true</td>
</tr>
<tr>
<td>center</td>
<td>Whether the text is centered</td>
<td>boolean</td>
<td>—</td>
<td>true</td>
</tr>
<tr>
<td>closeText</td>
<td>Custom text for the close button</td>
<td>string</td>
<td>—</td>
<td>-</td>
</tr>
<tr>
<td>showIcon</td>
<td>Whether to display the icon</td>
<td>boolean</td>
<td>—</td>
<td>false</td>
</tr>
<tr>
<td>icon</td>
<td>Change the displayed icon</td>
<td>string</td>
<td>—</td>
<td>-</td>
</tr>
<tr>
<td>effect</td>
<td>Select the provided theme</td>
<td>string</td>
<td>light/dark</td>
<td>light</td>
</tr>
<tr>
<td>class</td>
<td>Custom class style</td>
<td>string</td>
<td>-</td>
<td>-</td>
</tr>
</tbody>
</table>
<h3>Events</h3>
<table class="mkd-table">
<thead>
<tr>
<th>Event Name</th>
<th>Description</th>
<th>Parameter</th>
</tr>
</thead>
<tbody>
<tr>
<td>close</td>
<td>Event triggered when closing the alert</td>
<td>-</td>
</tr>
</tbody>
</table>
<h3>Sections</h3>
<table class="mkd-table">
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>-</td>
<td>Description</td>
</tr>
<tr>
<td>title</td>
<td>Content of the title</td>
</tr>
</tbody>
</table>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo7 from '../../components/alert/demo7.joker';
import DEMO_JOKER_demo6 from '../../components/alert/demo6.joker';
import DEMO_JOKER_demo5 from '../../components/alert/demo5.joker';
import DEMO_JOKER_demo4 from '../../components/alert/demo4.joker';
import DEMO_JOKER_demo3 from '../../components/alert/demo3.joker';
import DEMO_JOKER_demo2 from '../../components/alert/demo2.joker';
import DEMO_JOKER_demo1 from '../../components/alert/demo1.joker';
export default class extends Component {
components={
BottomNav,
DEMO_JOKER_demo7,
DEMO_JOKER_demo6,
DEMO_JOKER_demo5,
DEMO_JOKER_demo4,
DEMO_JOKER_demo3,
DEMO_JOKER_demo2,
DEMO_JOKER_demo1
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>
<template>
    <div ref="container" class="joker-demo-container">
        <h2>Alert Warning</h2>
        <p>Used to display important alert messages on the page.</p>
        <h3>Basic Usage</h3>
        <p>Non-floating elements on the page that will not disappear automatically.</p>
        <p>
            The Alert component provides four themes specified by the
            <code>type</code>
            property, with the default value being
            <code>info</code>
            .
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for success prompt&quot; type=&quot;success&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for message prompt&quot; type=&quot;info&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for warning prompt&quot; type=&quot;warning&quot; /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for error prompt&quot; type=&quot;error&quot; /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Themes</h3>
        <p>
            The Alert component offers two different themes:
            <code>light</code>
            and
            <code>dark</code>
            .
        </p>
        <p>
            Use the
            <code>effect</code>
            property to change the theme, with the default being
            <code>light</code>
            .
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for success prompt&quot; type=&quot;success&quot; effect=&quot;dark&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for message prompt&quot; type=&quot;info&quot; effect=&quot;dark&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for warning prompt&quot; type=&quot;warning&quot; effect=&quot;dark&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for error prompt&quot; type=&quot;error&quot; effect=&quot;dark&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Custom Close Button</h3>
        <p>Customize the close button text or symbol.</p>
        <p>
            In the Alert component, you can configure whether it can be closed, the text for the close button, and the callback function when closed. The
            <code>closable</code>
            property determines whether it can be closed, accepting a boolean value (default:
            <code>true</code>
            ). You can set the
            <code>closeText</code>
            property to replace the default close icon, but note that
            <code>closeText</code>
            must be a plain string. Use the
            <code>close</code>
            event to define the callback function upon closing.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Non - closable alert&quot; type=&quot;success&quot; closable=&quot;@false&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Custom close - text&quot; type=&quot;info&quot; closeText=&quot;Got it&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Alert with callback set&quot; type=&quot;warning&quot; @close=&quot;hello&quot;&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {};
    hello() {
        alert(&quot;Hello World!&quot;);
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>With Icon</h3>
        <p>Enhances readability by indicating certain states.</p>
        <p>
            Set the
            <code>showIcon</code>
            property to display an icon in the Alert, which helps users better understand the intent of the message.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for success prompt&quot; type=&quot;success&quot; showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for message prompt&quot; type=&quot;info&quot; showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for warning prompt&quot; type=&quot;warning&quot; showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for error prompt&quot; type=&quot;error&quot; showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Centered Text</h3>
        <p>
            Use the
            <code>center</code>
            property to align text horizontally.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for success prompt&quot; type=&quot;success&quot; center showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for message prompt&quot; type=&quot;info&quot; center showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for warning prompt&quot; type=&quot;warning&quot; center showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert title=&quot;Text for error prompt&quot; type=&quot;error&quot; center showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>With Auxiliary Text</h3>
        <p>Includes a title and description for more detailed explanations.</p>
        <p>
            In addition to the required
            <code>title</code>
            property, you can use the
            <code>description</code>
            property to provide supplementary text. Auxiliary text supports single-line content and will wrap automatically.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo6)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-alert
        title=&quot;With auxiliary text introduction&quot;
        type=&quot;success&quot;
        description=&quot;This is some supplementary information. Success often comes from hard work and perseverance. Keep up the good work and you'll achieve your goals!&quot;&gt;&lt;/jk-alert&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>With Icon and Auxiliary Text</h3>
        <p>Finally, here's an example featuring both an icon and auxiliary text.</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo7)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert
            title=&quot;Text for success prompt&quot;
            type=&quot;success&quot;
            description=&quot;Congratulations! The operation was completed successfully. All data has been saved without any issues.&quot;
            showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert
            title=&quot;Text for message prompt&quot;
            type=&quot;info&quot;
            description=&quot;Please note that the system will be undergoing maintenance tonight from 10 PM to 2 AM. Plan your work accordingly.&quot;
            showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert
            title=&quot;Text for warning prompt&quot;
            type=&quot;warning&quot;
            description=&quot;Your account's password is about to expire. Please change it as soon as possible to ensure account security.&quot;
            showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert
            title=&quot;Text for error prompt&quot;
            type=&quot;error&quot;
            description=&quot;An error occurred while processing your request. Please check your network connection and try again.&quot;
            showIcon&gt;&lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-alert
            title=&quot;Text for error prompt&quot;
            type=&quot;error&quot;
            description=&quot;An unexpected error has happened. Our technical team has been notified and will resolve it shortly.&quot;
            showIcon&gt;
            @section(&quot;title&quot;) {
                I'm the section title
            }
        &lt;/jk-alert&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Attribute</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Accepted Values</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>title</td>
                    <td>Title</td>
                    <td>string</td>
                    <td>-</td>
                    <td>â€”</td>
                </tr>
                <tr>
                    <td>type</td>
                    <td>Theme</td>
                    <td>string</td>
                    <td>success/warning/info/error</td>
                    <td>info</td>
                </tr>
                <tr>
                    <td>description</td>
                    <td>Auxiliary text. Can also be passed via the default slot.</td>
                    <td>string</td>
                    <td>â€”</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>closable</td>
                    <td>Whether the Alert can be closed</td>
                    <td>boolean</td>
                    <td>â€”</td>
                    <td>true</td>
                </tr>
                <tr>
                    <td>center</td>
                    <td>Whether to center the text</td>
                    <td>boolean</td>
                    <td>â€”</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>closeText</td>
                    <td>Custom close button text</td>
                    <td>string</td>
                    <td>â€”</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>showIcon</td>
                    <td>Whether to display an icon</td>
                    <td>boolean</td>
                    <td>â€”</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>icon</td>
                    <td>Custom icon</td>
                    <td>string</td>
                    <td>â€”</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>effect</td>
                    <td>Select theme</td>
                    <td>string</td>
                    <td>light/dark</td>
                    <td>light</td>
                </tr>
                <tr>
                    <td>class</td>
                    <td>Custom CSS class</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
            </tbody>
        </table>
        <h3>Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Event Name</th>
                    <th>Description</th>
                    <th>Parameters</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>close</td>
                    <td>Triggered when the Alert is closed</td>
                    <td>-</td>
                </tr>
            </tbody>
        </table>
        <h3>Slots</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>-</td>
                    <td>Description content</td>
                </tr>
                <tr>
                    <td>title</td>
                    <td>Title content</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo7 from "../../components/alert/demo7.joker";
import DEMO_JOKER_demo6 from "../../components/alert/demo6.joker";
import DEMO_JOKER_demo5 from "../../components/alert/demo5.joker";
import DEMO_JOKER_demo4 from "../../components/alert/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/alert/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/alert/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/alert/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo7,
        DEMO_JOKER_demo6,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>
<template>
    <div ref="container" class="joker-demo-container">
        <h2>Backtop</h2>
        <p>A button component that returns to the top of the page.</p>
        <h3>Basic Usage</h3>
        <p>Scroll down the page to see the button in the bottom-right corner.</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    Scroll down to see the bottom-right button.
    &lt;jk-backtop target=&quot;.container .pageContainer .warp&quot;&gt;&lt;/jk-backtop&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Custom Content</h3>
        <p>The display area is fixed to a 40px × 40px region, and the content inside can be customized.</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    Scroll down to see the bottom-right button.
    &lt;jk-backtop target=&quot;.container .pageContainer .warp&quot; bottom=&quot;100px&quot;&gt;
        &lt;div
            style=&quot;height: 100%;
                width: 100%;
                background-color: #f2f5f6;
                box-shadow: 0 0 6px rgba(0,0,0, .12);
                text-align: center;
                line-height: 40px;
                color: #1989fa;&quot;&gt;
            UP
        &lt;/div&gt;
    &lt;/jk-backtop&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Options</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>target</td>
                    <td>Target element that triggers scrolling</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>visibilityHeight</td>
                    <td>Scroll height threshold to make the button appear</td>
                    <td>number</td>
                    <td>—</td>
                    <td>200</td>
                </tr>
                <tr>
                    <td>right</td>
                    <td>Controls the display position, margin from the right edge of the page</td>
                    <td>string</td>
                    <td>-</td>
                    <td>40px</td>
                </tr>
                <tr>
                    <td>bottom</td>
                    <td>Controls the display position, margin from the bottom of the page</td>
                    <td>string</td>
                    <td>—</td>
                    <td>40px</td>
                </tr>
            </tbody>
        </table>
        <h3>Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Event Name</th>
                    <th>Description</th>
                    <th>Callback Parameters</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>click</td>
                    <td>Triggers when clicked</td>
                    <td>Click event</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo2 from "../../components/backtop/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/backtop/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>
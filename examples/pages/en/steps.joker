<template>
    <div ref="container" class="joker-demo-container">
        <h2>Steps</h2>
        <p>
            A step navigation bar that guides users through a process to complete tasks. The number of steps can be configured based on actual application scenarios, with a minimum of 2 steps required.
        </p>
        <h3>Basic Usage</h3>
        <p>Simple step bar.</p>
        <p>
            Set the
            <code>active</code>
            property, which accepts a
            <code>Number</code>
            indicating the step's index, starting from 0. For fixed-width step bars, the
            <code>space</code>
            property can be set, which accepts a
            <code>Number</code>
            (unit: px). If not set, it will be adaptive. The
            <code>finishStatus</code>
            property can be used to modify the status of completed steps.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-steps active=&quot;@model.active&quot; finishStatus=&quot;success&quot;&gt;
            @for(let item of model.list) {
                &lt;jk-step title=&quot;@item.title&quot;&gt;&lt;/jk-step&gt;
            }
        &lt;/jk-steps&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-button @click=&quot;next&quot;&gt;Next&lt;/jk-button&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = { active: 0, list: [{ title: &quot;Step1&quot; }, { title: &quot;Step2&quot; }, { title: &quot;Step3&quot; }] };

    next() {
        if (this.model.active++ &gt; 2) this.model.active = 0;
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>Steps with Status</h3>
        <p>Each step displays its current status.</p>
        <p>
            You can also use named slots (sections) to replace property settings. All available slot names are listed at the end of this documentation.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-steps space=&quot;@(200)&quot; active=&quot;1&quot; finishStatus=&quot;success&quot;&gt;
        &lt;jk-step title=&quot;Completed&quot;&gt;&lt;/jk-step&gt;
        &lt;jk-step title=&quot;In progress&quot;&gt;&lt;/jk-step&gt;
        &lt;jk-step title=&quot;Step 3&quot;&gt;&lt;/jk-step&gt;
    &lt;/jk-steps&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Steps with Descriptions</h3>
        <p>Each step has a corresponding status description.</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-steps active=&quot;1&quot;&gt;
        &lt;jk-step title=&quot;Step 1&quot; description=&quot;This is a very long, long, long descriptive text.&quot;&gt;&lt;/jk-step&gt;
        &lt;jk-step title=&quot;Step 2&quot; description=&quot;This is a very long, long, long descriptive text.&quot;&gt;&lt;/jk-step&gt;
        &lt;jk-step title=&quot;Step 3&quot; description=&quot;This one isn't that long.&quot;&gt;&lt;/jk-step&gt;
    &lt;/jk-steps&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Centered Steps</h3>
        <p>Both the title and description will be centered.</p>
        <p>
            Set the
            <code>active</code>
            property, which accepts a
            <code>Number</code>
            indicating the step's index, starting from 0. For fixed-width step bars, the
            <code>space</code>
            property can be set, which accepts a
            <code>Number</code>
            (unit: px). If not set, it will be adaptive. The
            <code>finishStatus</code>
            property can be used to modify the status of completed steps.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-steps active=&quot;2&quot; alignCenter&gt;
        &lt;jk-step title=&quot;Step 1&quot; description=&quot;This is a very long, long, long descriptive text.&quot;&gt;&lt;/jk-step&gt;
        &lt;jk-step title=&quot;Step 2&quot; description=&quot;This is a very long, long, long descriptive text.&quot;&gt;&lt;/jk-step&gt;
        &lt;jk-step title=&quot;Step 3&quot; description=&quot;This is a very long, long, long descriptive text.&quot;&gt;&lt;/jk-step&gt;
        &lt;jk-step title=&quot;Step 4&quot; description=&quot;This is a very long, long, long descriptive text.&quot;&gt;&lt;/jk-step&gt;
    &lt;/jk-steps&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Steps with Icons</h3>
        <p>Custom icons can be enabled within steps.</p>
        <p>
            Use the
            <code>icon</code>
            property to set the icon. For icon types, refer to the Icon component documentation. Additionally, custom icons can be used via named slots.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-steps active=&quot;1&quot;&gt;
        &lt;jk-step title=&quot;Step 1&quot; icon=&quot;jk-icon-edit&quot;&gt;&lt;/jk-step&gt;
        &lt;jk-step title=&quot;Step 2&quot; icon=&quot;jk-icon-upload&quot;&gt;&lt;/jk-step&gt;
        &lt;jk-step title=&quot;Step 3&quot; icon=&quot;jk-icon-picture&quot;&gt;&lt;/jk-step&gt;
    &lt;/jk-steps&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Vertical Steps</h3>
        <p>Steps displayed vertically.</p>
        <p>
            Simply set the
            <code>direction</code>
            property of the
            <code>jk-steps</code>
            element to
            <code>vertical</code>
            .
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo6)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;height: 300px;&quot;&gt;
        &lt;jk-steps direction=&quot;vertical&quot; active=&quot;1&quot;&gt;
            &lt;jk-step title=&quot;Step 1&quot;&gt;&lt;/jk-step&gt;
            &lt;jk-step title=&quot;Step 2&quot;&gt;&lt;/jk-step&gt;
            &lt;jk-step title=&quot;Step 3&quot; description=&quot;This is a very long, long, long descriptive text.&quot;&gt;&lt;/jk-step&gt;
        &lt;/jk-steps&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Simple-Style Steps</h3>
        <p>
            Set the
            <code>simple</code>
            property to apply a minimalist style. In this case,
            <code>alignCenter</code>
            ,
            <code>description</code>
            ,
            <code>direction</code>
            , and
            <code>space</code>
            properties become ineffective.
        </p>
        <p>
            Set the
            <code>active</code>
            property, which accepts a
            <code>Number</code>
            indicating the step's index, starting from 0. For fixed-width step bars, the
            <code>space</code>
            property can be set, which accepts a
            <code>Number</code>
            (unit: px). If not set, it will be adaptive. The
            <code>finishStatus</code>
            property can be used to modify the status of completed steps.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo7)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-steps active=&quot;1&quot; simple&gt;
        &lt;jk-step title=&quot;Step 1&quot; icon=&quot;jk-icon-edit&quot;&gt;&lt;/jk-step&gt;
        &lt;jk-step title=&quot;Step 2&quot; icon=&quot;jk-icon-upload&quot;&gt;&lt;/jk-step&gt;
        &lt;jk-step title=&quot;Step 3&quot; icon=&quot;jk-icon-picture&quot;&gt;&lt;/jk-step&gt;
    &lt;/jk-steps&gt;
    &lt;div style=&quot;margin-top: 20px&quot;&gt;&lt;/div&gt;
    &lt;jk-steps active=&quot;1&quot; finishStatus=&quot;success&quot; simple&gt;
        &lt;jk-step title=&quot;Step 1&quot;&gt;&lt;/jk-step&gt;
        &lt;jk-step title=&quot;Step 2&quot;&gt;&lt;/jk-step&gt;
        &lt;jk-step title=&quot;Step 3&quot;&gt;&lt;/jk-step&gt;
    &lt;/jk-steps&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Steps Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Optional Values</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>class</td>
                    <td>Custom CSS class</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>space</td>
                    <td>Spacing between steps (supports percentage). If not specified, it auto-adapts.</td>
                    <td>number / string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>direction</td>
                    <td>Display direction</td>
                    <td>string</td>
                    <td>vertical / horizontal</td>
                    <td>horizontal</td>
                </tr>
                <tr>
                    <td>active</td>
                    <td>Sets the currently active step</td>
                    <td>number</td>
                    <td>—</td>
                    <td>0</td>
                </tr>
                <tr>
                    <td>alignCenter</td>
                    <td>Aligns steps to center</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>simple</td>
                    <td>Whether to apply simple style</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
            </tbody>
        </table>
        <h3>Step Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Optional Values</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>title</td>
                    <td>Step title</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>description</td>
                    <td>Descriptive text</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>icon</td>
                    <td>Icon (supports slot usage)</td>
                    <td>either icon class name (refer to Icon docs) or slot usage</td>
                    <td>string</td>
                    <td>-</td>
                </tr>
            </tbody>
        </table>
        <h3>Step Slots</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>icon</td>
                    <td>Custom icon</td>
                </tr>
                <tr>
                    <td>title</td>
                    <td>Custom title</td>
                </tr>
                <tr>
                    <td>description</td>
                    <td>Custom descriptive text</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo7 from "../../components/steps/demo7.joker";
import DEMO_JOKER_demo6 from "../../components/steps/demo6.joker";
import DEMO_JOKER_demo5 from "../../components/steps/demo5.joker";
import DEMO_JOKER_demo4 from "../../components/steps/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/steps/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/steps/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/steps/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo7,
        DEMO_JOKER_demo6,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>
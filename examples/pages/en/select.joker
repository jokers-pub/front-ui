<template>
    <div ref="container" class="joker-demo-container">
        <h2>Select</h2>
        <p>When there are too many options, use a dropdown menu to display and select content.</p>
        <h3>Basic Usage</h3>
        <p>
            Basic single selection with broad applicability.
            <br />
            The
            <code>value</code>
            corresponds to the
            <code>value</code>
            property of the currently selected
            <code>jk-option</code>
            .
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-select&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-select value=&quot;9&quot;&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
            &lt;jk-option label=&quot;Eggplant&quot; value=&quot;5&quot; /&gt;
            &lt;jk-option label=&quot;Fig&quot; value=&quot;6&quot; /&gt;
            &lt;jk-option label=&quot;Grape&quot; value=&quot;7&quot; /&gt;
            &lt;jk-option label=&quot;Honeydew&quot; value=&quot;8&quot; /&gt;
            &lt;jk-option label=&quot;Kiwi&quot; value=&quot;9&quot; /&gt;
            &lt;jk-option label=&quot;Lemon&quot; value=&quot;10&quot; /&gt;
            &lt;jk-option label=&quot;Mango&quot; value=&quot;11&quot; /&gt;
            &lt;jk-option label=&quot;Orange&quot; value=&quot;12&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Disabled Option</h3>
        <p>
            Set
            <code>disabled</code>
            to
            <code>true</code>
            in
            <code>jk-option</code>
            to disable the option.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-select&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; disabled value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-select disabled&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Clearable Single Select</h3>
        <p>Includes a clear button to reset the selector to its initial state.</p>
        <p>
            Set the
            <code>clearable</code>
            attribute for
            <code>jk-select</code>
            to enable clearing. Note that
            <code>clearable</code>
            only applies to single selection.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-select clearable&gt;
            &lt;jk-option label=&quot;Cat&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Dog&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Bird&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Fish&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Multiple Selection Dropdown</h3>
        <p>Basic multiple selection with broad applicability, displaying selected items as Tags.</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;container&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-select clearable multiple @change=&quot;handleChange&quot;&gt;
                &lt;jk-option label=&quot;Car&quot; value=&quot;1&quot; /&gt;
                &lt;jk-option label=&quot;Bike&quot; value=&quot;2&quot; /&gt;
                &lt;jk-option label=&quot;Bus&quot; value=&quot;3&quot; /&gt;
                &lt;jk-option label=&quot;Train&quot; value=&quot;4&quot; /&gt;
            &lt;/jk-select&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-select clearable multiple value=&quot;@(['2', '4'])&quot;&gt;
                &lt;jk-option label=&quot;Car&quot; value=&quot;1&quot; /&gt;
                &lt;jk-option label=&quot;Bike&quot; value=&quot;2&quot; /&gt;
                &lt;jk-option label=&quot;Bus&quot; value=&quot;3&quot; /&gt;
                &lt;jk-option label=&quot;Train&quot; value=&quot;4&quot; /&gt;
            &lt;/jk-select&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;

export default class extends Component {
    handleChange(e: VNode.Event) {
        console.log(e.data);
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>Custom Template</h3>
        <p>Options can be customized.</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-select clearable&gt;
            &lt;jk-option label=&quot;Pen&quot; value=&quot;1&quot;&gt;
                @section(&quot;default&quot;, item) {
                    @(item.label)
                    &lt;span&gt;[@(item.value)]&lt;/span&gt;
                }
            &lt;/jk-option&gt;
            &lt;jk-option label=&quot;Book&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cup&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Key&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Grouping</h3>
        <p>Group options for better organization.</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo6)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-select clearable&gt;
            &lt;jk-option-group label=&quot;Meat Dishes&quot;&gt;
                &lt;jk-option label=&quot;Beef Steak&quot; value=&quot;1&quot; /&gt;
                &lt;jk-option label=&quot;Chicken Wings&quot; value=&quot;2&quot; /&gt;
                &lt;jk-option label=&quot;Pork Cutlet&quot; value=&quot;3&quot; /&gt;
            &lt;/jk-option-group&gt;
            &lt;jk-option-group label=&quot;Vegetable Dishes&quot;&gt;
                &lt;jk-option label=&quot;Spinach Salad&quot; value=&quot;4&quot; /&gt;
                &lt;jk-option label=&quot;Cucumber Salad&quot; value=&quot;5&quot; /&gt;
            &lt;/jk-option-group&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-select clearable filterable&gt;
            &lt;jk-option-group label=&quot;Meat Dishes&quot;&gt;
                &lt;jk-option label=&quot;Beef Steak&quot; value=&quot;1&quot; /&gt;
                &lt;jk-option label=&quot;Chicken Wings&quot; value=&quot;2&quot; /&gt;
                &lt;jk-option label=&quot;Pork Cutlet&quot; value=&quot;3&quot; /&gt;
            &lt;/jk-option-group&gt;
            &lt;jk-option-group label=&quot;Vegetable Dishes&quot;&gt;
                &lt;jk-option label=&quot;Spinach Salad&quot; value=&quot;4&quot; /&gt;
                &lt;jk-option label=&quot;Cucumber Salad&quot; value=&quot;5&quot; /&gt;
            &lt;/jk-option-group&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Searchable</h3>
        <p>Quickly find options using search functionality.</p>
        <p>
            Enable search functionality by adding the
            <code>filterable</code>
            attribute. By default, Select filters options whose
            <code>label</code>
            contains the input value. For custom search logic, provide a
            <code>filter-method</code>
            .
            <code>filter-method</code>
            is a
            <code>Function</code>
            called when the input changes, with the current input value as the parameter.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo7)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-select filterable&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-select
            placeholder=&quot;Asynchronous query search&quot;
            filterable
            remote
            remoteMethod=&quot;@queryData&quot;
            loading=&quot;@model.loading&quot;&gt;
            @for(let item of model.options) {
                &lt;jk-option label=&quot;@item.label&quot; value=&quot;@item.value&quot; /&gt;
            }
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-select placeholder=&quot;Please select (can create new value)&quot; filterable allowCreate @new=&quot;handleCreatNew&quot;&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;

&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;
import { sleep } from &quot;@joker.front/shared&quot;;
import { Message } from &quot;../../../src&quot;;

export default class extends Component {
    model: {
        options: Array&lt;{ label: string; value: string }&gt;;
        loading: boolean;
    } = {
        options: [],
        loading: false
    };

    async queryData(keyword: string) {
        if (keyword) {
            this.model.loading = true;
            let data = [
                { label: &quot;Apple&quot;, value: &quot;1&quot; },
                { label: &quot;Banana&quot;, value: &quot;2&quot; },
                { label: &quot;Cherry&quot;, value: &quot;3&quot; },
                { label: &quot;Date&quot;, value: &quot;4&quot; }
            ];

            // Simulate request time-consuming
            await sleep(1000);

            this.model.options = data.filter((m) =&gt; {
                return m.label.startsWith(keyword);
            });

            this.model.loading = false;
        }
    }
    handleCreatNew(e: VNode.Event&lt;string&gt;) {
        Message.info(&quot;The New event is triggered, creating a new item: &quot; + e.data);
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>Searchable Multiple Selection</h3>
        <DemoContainer component="@(components.DEMO_JOKER_demo8)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;container&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-select multiple filterable&gt;
                &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
                &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
                &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
                &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
            &lt;/jk-select&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-select
                placeholder=&quot;Asynchronous query search&quot;
                multiple
                filterable
                remote
                remoteMethod=&quot;@queryData&quot;
                loading=&quot;@model.loading&quot;&gt;
                @for(let item of model.options) {
                    &lt;jk-option label=&quot;@item.label&quot; value=&quot;@item.value&quot; /&gt;
                }
            &lt;/jk-select&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-select placeholder=&quot;Please select (can add new)&quot; multiple filterable allowCreate&gt;
                &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
                &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
                &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
                &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
            &lt;/jk-select&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;
import { sleep } from &quot;@joker.front/shared&quot;;

export default class extends Component {
    model = {
        options: [],
        loading: false
    };

    async queryData(keyword) {
        if (!keyword) return;
        this.model.loading = true;
        const data = [
            { label: &quot;Apple&quot;, value: &quot;1&quot; },
            { label: &quot;Banana&quot;, value: &quot;2&quot; },
            { label: &quot;Cherry&quot;, value: &quot;3&quot; },
            { label: &quot;Date&quot;, value: &quot;4&quot; },
            { label: &quot;Eggplant&quot;, value: &quot;5&quot; },
            { label: &quot;Fig&quot;, value: &quot;6&quot; },
            { label: &quot;Grape&quot;, value: &quot;7&quot; },
            { label: &quot;Honeydew&quot;, value: &quot;8&quot; },
            { label: &quot;Kiwi&quot;, value: &quot;9&quot; },
            { label: &quot;Lemon&quot;, value: &quot;10&quot; },
            { label: &quot;Mango&quot;, value: &quot;11&quot; },
            { label: &quot;Orange&quot;, value: &quot;12&quot; }
        ];

        // Simulate request time-consuming
        await sleep(1000);

        this.model.options = data.filter((m) =&gt; {
            return m.label.startsWith(keyword);
        });

        this.model.loading = false;
    }
}
&lt;/script&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
.container {
    :deep(.jk-select) {
        width: 240px;
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Sizes</h3>
        <p>
            Specify the input size via the
            <code>size</code>
            attribute. Apart from the default size, medium, small, and mini are also available.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo9)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-select&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-select size=&quot;medium&quot;&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-select size=&quot;small&quot;&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-select size=&quot;mini&quot;&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-select multiple filterable&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-select size=&quot;medium&quot; multiple filterable&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-select size=&quot;small&quot; multiple filterable&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-select size=&quot;mini&quot; multiple filterable&gt;
            &lt;jk-option label=&quot;Apple&quot; value=&quot;1&quot; /&gt;
            &lt;jk-option label=&quot;Banana&quot; value=&quot;2&quot; /&gt;
            &lt;jk-option label=&quot;Cherry&quot; value=&quot;3&quot; /&gt;
            &lt;jk-option label=&quot;Date&quot; value=&quot;4&quot; /&gt;
        &lt;/jk-select&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Select Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Options</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>value</td>
                    <td>Bound value</td>
                    <td>boolean/string/number</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>class</td>
                    <td>Custom CSS class</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>multiple</td>
                    <td>Whether multiple selection is enabled</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>Whether the select is disabled</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>value-key</td>
                    <td>Key name for unique identifier for value, required when binding to an object</td>
                    <td>string</td>
                    <td>—</td>
                    <td>value</td>
                </tr>
                <tr>
                    <td>size</td>
                    <td>Input size</td>
                    <td>string</td>
                    <td>medium/small/mini</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>clearable</td>
                    <td>Whether the selection can be cleared</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>multiple-limit</td>
                    <td>Maximum number of selectable items in multiple mode; 0 means unlimited</td>
                    <td>number</td>
                    <td>—</td>
                    <td>0</td>
                </tr>
                <tr>
                    <td>name</td>
                    <td>
                        Corresponds to the form’s
                        <code>name</code>
                        attribute
                    </td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>placeholder</td>
                    <td>Placeholder text</td>
                    <td>string</td>
                    <td>—</td>
                    <td>Select</td>
                </tr>
                <tr>
                    <td>filterable</td>
                    <td>Whether search is enabled</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>filter-method</td>
                    <td>
                        Custom search method; takes the query text, selected label, and option value, returning
                        <code>true/false</code>
                        for visibility
                    </td>
                    <td>function</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>remote</td>
                    <td>Whether to use remote search</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>remote-method</td>
                    <td>Remote search method</td>
                    <td>function</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>loading</td>
                    <td>Whether data is being fetched remotely</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>loading-text</td>
                    <td>Text displayed during remote loading</td>
                    <td>string</td>
                    <td>—</td>
                    <td>Loading...</td>
                </tr>
                <tr>
                    <td>no-match-text</td>
                    <td>
                        Text displayed when no matches are found; can also use
                        <code>slot=&quot;empty&quot;</code>
                    </td>
                    <td>string</td>
                    <td>—</td>
                    <td>No matches</td>
                </tr>
                <tr>
                    <td>no-data-text</td>
                    <td>
                        Text displayed when no data is available; can also use
                        <code>slot=&quot;empty&quot;</code>
                    </td>
                    <td>string</td>
                    <td>—</td>
                    <td>No data</td>
                </tr>
                <tr>
                    <td>fullWidth</td>
                    <td>Whether the width is 100%</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>allowCreate</td>
                    <td>Whether new items can be created</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>createText</td>
                    <td>Prompt text for creating a new item</td>
                    <td>string</td>
                    <td>—</td>
                    <td>Create new value</td>
                </tr>
            </tbody>
        </table>
        <h3>Select Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Event Name</th>
                    <th>Description</th>
                    <th>Callback Parameters</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>change</td>
                    <td>Triggers when the selected value changes</td>
                    <td>Current selected value</td>
                </tr>
                <tr>
                    <td>new</td>
                    <td>Triggers when creating a new value in single select mode</td>
                    <td>Query value (input text)</td>
                </tr>
            </tbody>
        </table>
        <h3>Select Slots</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>default</td>
                    <td>List of Option components</td>
                </tr>
                <tr>
                    <td>empty</td>
                    <td>Displayed when no options are available</td>
                </tr>
            </tbody>
        </table>
        <h3>Option Group Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Options</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>label</td>
                    <td>Group name</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>Whether all options in the group are disabled</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
            </tbody>
        </table>
        <h3>Option Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Options</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>value</td>
                    <td>Value of the option</td>
                    <td>string/number/object</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>label</td>
                    <td>
                        Label of the option; defaults to
                        <code>value</code>
                        if omitted
                    </td>
                    <td>string/number</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>Whether the option is disabled</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo9 from "../../components/select/demo9.joker";
import DEMO_JOKER_demo8 from "../../components/select/demo8.joker";
import DEMO_JOKER_demo7 from "../../components/select/demo7.joker";
import DEMO_JOKER_demo6 from "../../components/select/demo6.joker";
import DEMO_JOKER_demo5 from "../../components/select/demo5.joker";
import DEMO_JOKER_demo4 from "../../components/select/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/select/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/select/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/select/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo9,
        DEMO_JOKER_demo8,
        DEMO_JOKER_demo7,
        DEMO_JOKER_demo6,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>
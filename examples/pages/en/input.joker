<template>
    <div ref="container" class="joker-demo-container">
        <h2>Input</h2>
        <p>Used to input characters via mouse or keyboard.</p>
        <h3>Basic Usage</h3>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:180px&quot;&gt;
        &lt;jk-input placeholder=&quot;Please enter the content&quot; @input=&quot;handleInput&quot; /&gt;
    &lt;/div&gt;
    &lt;p&gt;
        @model.val
    &lt;/p&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        val: &quot;&quot;
    };
    handleInput(e: VNode.Event) {
        this.model.val = e.data!;
    }
}
&lt;/script&gt;
&lt;style scoped lang=&quot;scss&quot;&gt;
p {
    padding: 10px 0;
    line-height: 1.2;
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Disabled State</h3>
        <p>
            Specify whether to disable the input component through the
            <code>disabled</code>
            attribute.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:180px&quot;&gt;
        &lt;jk-input placeholder=&quot;Please enter the content&quot; disabled /&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Clearable</h3>
        <p>
            Adding the
            <code>clearable</code>
            attribute gives you a clearable input box.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:180px&quot;&gt;
        &lt;jk-input placeholder=&quot;Please enter the content&quot; clearable /&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Input Box with Icon</h3>
        <p>Use an icon to mark the input type.</p>
        <p>
            You can add icons to the front and end of the input component through the
            <code>prefix-icon</code>
            and
            <code>suffix-icon</code>
            attributes, or you can place the icon through
            <code>section</code>
            .
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot;&gt;
        &lt;DemoRow&gt;
            属性方式：
            &lt;jk-input placeholder=&quot;Please select a date&quot; suffix-icon=&quot;jk-icon-date&quot; /&gt;
            &lt;jk-input placeholder=&quot;Please enter the content&quot; prefix-icon=&quot;jk-icon-search&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            section方式：
            &lt;jk-input placeholder=&quot;Please select a date&quot;&gt;
                @section(&quot;suffix&quot;) {
                    &lt;i class=&quot;jk-icon-date&quot; /&gt;
                }
            &lt;/jk-input&gt;
            &lt;jk-input placeholder=&quot;Please enter the content&quot;&gt;
                @section(&quot;prefix&quot;) {
                    &lt;i class=&quot;jk-icon-search&quot; /&gt;
                }
            &lt;/jk-input&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
:deep(.demo-container .jk-input) {
    width: 180px;
    margin-right: 15px;
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Composite Input Box</h3>
        <p>It can have pre-or post-elements, usually labels or buttons.</p>
        <p>
            You can use
            <code>section</code>
            to specify the pre-or post-content in the input.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-input placeholder=&quot;Please enter the content&quot;&gt;
            @section(&quot;prepend&quot;) {
                Http://
            }
        &lt;/jk-input&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-input placeholder=&quot;Please enter the content&quot;&gt;
            @section(&quot;append&quot;) {
                .com
            }
        &lt;/jk-input&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;

</code></pre>
        </DemoContainer>
        <h3>Size</h3>
        <p>
            You can specify the size of the input box through the
            <code>size</code>
            attribute. Besides the default size, there are also three sizes: medium, small, and mini.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo6)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-input placeholder=&quot;Please enter the content&quot; suffix-icon=&quot;jk-icon-date&quot; /&gt;
            &lt;jk-input placeholder=&quot;Please enter the content&quot; size=&quot;medium&quot; suffix-icon=&quot;jk-icon-date&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-input placeholder=&quot;Please enter the content&quot; size=&quot;small&quot; suffix-icon=&quot;jk-icon-date&quot; autofocus /&gt;
            &lt;jk-input placeholder=&quot;Please enter the content&quot; size=&quot;mini&quot; suffix-icon=&quot;jk-icon-date&quot; /&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
:deep(.demo-container .jk-input) {
    width: 180px;
    margin-right: 15px;
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Input Length Limit</h3>
        <p>
            <code>maxlength</code>
            and
            <code>minlength</code>
            are native attributes used to limit the character length of the input box. The character length is counted by the length of the JavaScript string. For input boxes of type
            <code>text</code>
            or
            <code>textarea</code>
            , while using the
            <code>maxlength</code>
            attribute to limit the maximum input length, you can set the
            <code>show-word-limit</code>
            attribute to display the word count.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo7)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:180px&quot;&gt;
        &lt;jk-input placeholder=&quot;Please enter&quot; maxlength=&quot;10&quot; show-word-limit /&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Input Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Optional Values</th>
                    <th>Default Value</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>type</td>
                    <td>Type</td>
                    <td>string</td>
                    <td>
                        text,
                        <a
                            href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types"
                            target="_blank">
                            native input type values
                        </a>
                    </td>
                    <td>text</td>
                </tr>
                <tr>
                    <td>value</td>
                    <td>Bound value</td>
                    <td>string / number</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>class</td>
                    <td>Custom class style</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>maxlength</td>
                    <td>Native attribute, maximum input length</td>
                    <td>number</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>minlength</td>
                    <td>Native attribute, minimum input length</td>
                    <td>number</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>show-word-limit</td>
                    <td>Whether to display the input word count</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>placeholder</td>
                    <td>Placeholder text of the input box</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>clearable</td>
                    <td>Whether it is clearable</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>Disabled</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>size</td>
                    <td>Size of the input box</td>
                    <td>string</td>
                    <td>medium / small / mini</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>prefix-icon</td>
                    <td>Icon at the head of the input box</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>suffix-icon</td>
                    <td>Icon at the end of the input box</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>autocomplete</td>
                    <td>Native attribute, auto-complete</td>
                    <td>string</td>
                    <td>on, off</td>
                    <td>off</td>
                </tr>
                <tr>
                    <td>name</td>
                    <td>Native attribute</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>readonly</td>
                    <td>Native attribute, whether it is read-only</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>autofocus</td>
                    <td>Native attribute, auto-focus</td>
                    <td>boolean</td>
                    <td>true, false</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>label</td>
                    <td>The label text associated with the input box</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>tabindex</td>
                    <td>The tabindex of the input box</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>status-icon</td>
                    <td>Whether to display the validation status</td>
                    <td>boolean</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
            </tbody>
        </table>
        <h3>Input Sections</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>prefix</td>
                    <td>Content at the head of the input box</td>
                </tr>
                <tr>
                    <td>suffix</td>
                    <td>Content at the end of the input box</td>
                </tr>
                <tr>
                    <td>prepend</td>
                    <td>Pre-content of the input box</td>
                </tr>
                <tr>
                    <td>append</td>
                    <td>Post-content of the input box</td>
                </tr>
            </tbody>
        </table>
        <h3>Input Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Event Name</th>
                    <th>Description</th>
                    <th>Callback Parameters</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>blur</td>
                    <td>Triggered when the Input loses focus</td>
                    <td>VNode.Event</td>
                </tr>
                <tr>
                    <td>focus</td>
                    <td>Triggered when the Input gains focus</td>
                    <td>VNode.Event</td>
                </tr>
                <tr>
                    <td>change</td>
                    <td>Triggered only when the input box loses focus or the user presses Enter</td>
                    <td>VNode.Event</td>
                </tr>
                <tr>
                    <td>input</td>
                    <td>Triggered when the value of the Input changes</td>
                    <td>VNode.Event</td>
                </tr>
                <tr>
                    <td>clear</td>
                    <td>
                        Triggered when clicking the clear button generated by the
                        <code>clearable</code>
                        attribute
                    </td>
                    <td>VNode.Event</td>
                </tr>
            </tbody>
        </table>
        <h3>Input Methods</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Method Name</th>
                    <th>Description</th>
                    <th>Parameter</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>focus</td>
                    <td>Make the input gain focus</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>blur</td>
                    <td>Make the input lose focus</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>select</td>
                    <td>Select the text in the input</td>
                    <td>—</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo7 from "../../components/input/demo7.joker";
import DEMO_JOKER_demo6 from "../../components/input/demo6.joker";
import DEMO_JOKER_demo5 from "../../components/input/demo5.joker";
import DEMO_JOKER_demo4 from "../../components/input/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/input/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/input/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/input/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo7,
        DEMO_JOKER_demo6,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>
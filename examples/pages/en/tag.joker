<template>
<div ref='container' class='joker-demo-container'>
<h2>Tag 标签</h2>
<p>用于标记和选择。</p>
<h3>基础用法</h3>
<p>由<code>type</code>属性来选择 tag 的类型，也可以通过<code>color</code>属性来自定义背景色。</p>
<DemoContainer component="@(components.DEMO_JOKER_demo1)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot;&gt;
        &lt;jk-tag&gt;标签一&lt;/jk-tag&gt;
        &lt;jk-tag type=&quot;success&quot;&gt;标签二&lt;/jk-tag&gt;
        &lt;jk-tag type=&quot;info&quot;&gt;标签三&lt;/jk-tag&gt;
        &lt;jk-tag type=&quot;warning&quot;&gt;标签四&lt;/jk-tag&gt;
        &lt;jk-tag type=&quot;danger&quot;&gt;标签五&lt;/jk-tag&gt;
        &lt;jk-tag color=&quot;yellow&quot;&gt;自定义颜色&lt;/jk-tag&gt;
    &lt;/div&gt;
&lt;/template&gt;

&lt;style lang=&quot;scss&quot; scoped&gt;
.demo-container {
    :deep(.jk-tag) {
        margin-right: 10px;
    }
}
&lt;/style&gt;
</code></pre>
</DemoContainer>
<h3>可移除标签</h3>
<p>设置<code>closable</code>属性可以定义一个标签是否可移除。</p>
<DemoContainer component="@(components.DEMO_JOKER_demo2)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot;&gt;
        &lt;jk-tag closable&gt;标签一&lt;/jk-tag&gt;
        &lt;jk-tag type=&quot;success&quot; closable&gt;标签二&lt;/jk-tag&gt;
        &lt;jk-tag type=&quot;info&quot; closable&gt;标签三&lt;/jk-tag&gt;
        &lt;jk-tag type=&quot;warning&quot; closable&gt;标签四&lt;/jk-tag&gt;
        &lt;jk-tag type=&quot;danger&quot; closable&gt;标签五&lt;/jk-tag&gt;
        &lt;jk-tag color=&quot;yellow&quot; closable&gt;自定义颜色&lt;/jk-tag&gt;
    &lt;/div&gt;
&lt;/template&gt;

&lt;style lang=&quot;scss&quot; scoped&gt;
.demo-container {
    :deep(.jk-tag) {
        margin-right: 10px;
    }
}
&lt;/style&gt;
</code></pre>
</DemoContainer>
<h3>不同尺寸</h3>
<p>Tag 组件提供除了默认值以外的三种尺寸，可以在不同场景下选择合适的按钮尺寸。</p>
<p>额外的尺寸：<code>medium</code>、<code>small</code>、<code>mini</code>，通过设置<code>size</code>属性来配置它们。</p>
<DemoContainer component="@(components.DEMO_JOKER_demo3)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot;&gt;
        &lt;jk-tag closable&gt;默认尺寸&lt;/jk-tag&gt;
        &lt;jk-tag size=&quot;medium&quot; closable&gt;中等尺寸&lt;/jk-tag&gt;
        &lt;jk-tag size=&quot;small&quot; closable&gt;小型标签&lt;/jk-tag&gt;
        &lt;jk-tag size=&quot;mini&quot; closable&gt;超小标签&lt;/jk-tag&gt;
    &lt;/div&gt;
&lt;/template&gt;

&lt;style lang=&quot;scss&quot; scoped&gt;
.demo-container {
    :deep(.jk-tag) {
        margin-right: 10px;
    }
}
&lt;/style&gt;
</code></pre>
</DemoContainer>
<h3>不同主题</h3>
<p>Tag 组件提供了三个不同的主题：<code>dark</code>、<code>light</code> 和 <code>plain</code></p>
<p>通过设置<code>effect</code>属性来改变主题，默认为 <code>light</code></p>
<DemoContainer component="@(components.DEMO_JOKER_demo4)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;span&gt;默认（Light）：&lt;/span&gt;
            &lt;jk-tag closable&gt;标签一&lt;/jk-tag&gt;
            &lt;jk-tag type=&quot;success&quot; closable&gt;标签二&lt;/jk-tag&gt;
            &lt;jk-tag type=&quot;info&quot; closable&gt;标签三&lt;/jk-tag&gt;
            &lt;jk-tag type=&quot;warning&quot; closable&gt;标签四&lt;/jk-tag&gt;
            &lt;jk-tag type=&quot;danger&quot; closable&gt;标签五&lt;/jk-tag&gt;
        &lt;/div&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;span&gt;Dark：&lt;/span&gt;
            &lt;jk-tag effect=&quot;dark&quot; closable&gt;标签一&lt;/jk-tag&gt;
            &lt;jk-tag effect=&quot;dark&quot; type=&quot;success&quot; closable&gt;标签二&lt;/jk-tag&gt;
            &lt;jk-tag effect=&quot;dark&quot; type=&quot;info&quot; closable&gt;标签三&lt;/jk-tag&gt;
            &lt;jk-tag effect=&quot;dark&quot; type=&quot;warning&quot; closable&gt;标签四&lt;/jk-tag&gt;
            &lt;jk-tag effect=&quot;dark&quot; type=&quot;danger&quot; closable&gt;标签五&lt;/jk-tag&gt;
        &lt;/div&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;span&gt;Plain：&lt;/span&gt;
            &lt;jk-tag effect=&quot;plain&quot; closable&gt;标签一&lt;/jk-tag&gt;
            &lt;jk-tag effect=&quot;plain&quot; type=&quot;success&quot; closable&gt;标签二&lt;/jk-tag&gt;
            &lt;jk-tag effect=&quot;plain&quot; type=&quot;info&quot; closable&gt;标签三&lt;/jk-tag&gt;
            &lt;jk-tag effect=&quot;plain&quot; type=&quot;warning&quot; closable&gt;标签四&lt;/jk-tag&gt;
            &lt;jk-tag effect=&quot;plain&quot; type=&quot;danger&quot; closable&gt;标签五&lt;/jk-tag&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/template&gt;

&lt;style lang=&quot;scss&quot; scoped&gt;
.demo-container {
    :deep(.jk-tag) {
        margin-right: 10px;
    }

    .row {
        padding: 30px 24px;
        overflow: hidden;
        border-bottom: 1px solid #eff2f6;

        span {
            font-size: 14px;
            color: #8492a6;
            line-height: 44px;
            font-size: 16px;
        }

        &amp;:last-child {
            border-bottom: none;
        }
    }
}
&lt;/style&gt;
</code></pre>
</DemoContainer>
<h3>Attributes</h3>
<table class="mkd-table">
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>类型</th>
<th>可选值</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>type</td>
<td>类型</td>
<td>string</td>
<td>success/info/warning/danger</td>
<td>—</td>
</tr>
<tr>
<td>class</td>
<td>自定义 class 样式</td>
<td>string</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>closable</td>
<td>是否可关闭</td>
<td>boolean</td>
<td>—</td>
<td>false</td>
</tr>
<tr>
<td>color</td>
<td>背景色</td>
<td>string</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>size</td>
<td>尺寸</td>
<td>string</td>
<td>medium / small / mini</td>
<td>—</td>
</tr>
<tr>
<td>effect</td>
<td>主题</td>
<td>string</td>
<td>dark / light / plain</td>
<td>light</td>
</tr>
</tbody>
</table>
<h3>Events</h3>
<table class="mkd-table">
<thead>
<tr>
<th>事件名称</th>
<th>说明</th>
<th>回调参数</th>
</tr>
</thead>
<tbody>
<tr>
<td>click</td>
<td>点击 Tag 时触发的事件</td>
<td>—</td>
</tr>
<tr>
<td>close</td>
<td>点击关闭按钮时触发</td>
<td>—</td>
</tr>
</tbody>
</table>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo4 from '../../components/tag/demo4.joker';
import DEMO_JOKER_demo3 from '../../components/tag/demo3.joker';
import DEMO_JOKER_demo2 from '../../components/tag/demo2.joker';
import DEMO_JOKER_demo1 from '../../components/tag/demo1.joker';
export default class extends Component {
components={
BottomNav,
DEMO_JOKER_demo4,
DEMO_JOKER_demo3,
DEMO_JOKER_demo2,
DEMO_JOKER_demo1
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>
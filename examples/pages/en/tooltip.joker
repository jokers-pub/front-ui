<template>
    <div ref="container" class="joker-demo-container">
        <h2>Tooltip</h2>
        <p>Often used to display prompt information when the mouse hovers.</p>
        <h3>Basic Usage</h3>
        <p>
            Here we provide 9 different display directions. You can understand them through the following complete examples and choose the effect you want.
        </p>
        <p>
            Use the
            <code>content</code>
            attribute to determine the prompt information when hovering. The display effect is determined by the
            <code>placement</code>
            attribute. The value of the
            <code>placement</code>
            attribute is in the format of
            <code>direction-alignment position</code>
            . The four directions are
            <code>top</code>
            ,
            <code>left</code>
            ,
            <code>right</code>
            ,
            <code>bottom</code>
            , and the three alignment positions are
            <code>start</code>
            ,
            <code>end</code>
            , with the default being
            <code>bottom</code>
            . For example, if
            <code>placement = &quot;left-end&quot;</code>
            , the prompt information will appear on the left side of the target element, and the bottom of the prompt information will be aligned with the bottom of the target element.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;box&quot;&gt;
        &lt;div class=&quot;top&quot;&gt;
            &lt;jk-tooltip content=&quot;Top Left Tooltip Text&quot; placement=&quot;top-start&quot;&gt;
                &lt;jk-button&gt;Top Left&lt;/jk-button&gt;
            &lt;/jk-tooltip&gt;
            &lt;jk-tooltip content=&quot;Top Center Tooltip Text&quot; placement=&quot;top&quot;&gt;
                &lt;jk-button&gt;Top&lt;/jk-button&gt;
            &lt;/jk-tooltip&gt;
            &lt;jk-tooltip content=&quot;Top Right Tooltip Text&quot; placement=&quot;top-end&quot;&gt;
                &lt;jk-button&gt;Top Right&lt;/jk-button&gt;
            &lt;/jk-tooltip&gt;
        &lt;/div&gt;
        &lt;div class=&quot;left&quot;&gt;
            &lt;jk-tooltip content=&quot;Left Top Tooltip Text&quot; placement=&quot;left-start&quot;&gt;
                &lt;jk-button&gt;Left Top&lt;/jk-button&gt;
            &lt;/jk-tooltip&gt;
            &lt;jk-tooltip content=&quot;Left Center Tooltip Text&quot; placement=&quot;left&quot;&gt;
                &lt;jk-button&gt;Left&lt;/jk-button&gt;
            &lt;/jk-tooltip&gt;
            &lt;jk-tooltip content=&quot;Left Bottom Tooltip Text&quot; placement=&quot;left-end&quot;&gt;
                &lt;jk-button&gt;Left Bottom&lt;/jk-button&gt;
            &lt;/jk-tooltip&gt;
        &lt;/div&gt;
        &lt;div class=&quot;right&quot;&gt;
            &lt;jk-tooltip content=&quot;Right Top Tooltip Text&quot; placement=&quot;right-start&quot;&gt;
                &lt;jk-button&gt;Right Top&lt;/jk-button&gt;
            &lt;/jk-tooltip&gt;
            &lt;jk-tooltip content=&quot;Right Center Tooltip Text&quot; placement=&quot;right&quot;&gt;
                &lt;jk-button&gt;Right&lt;/jk-button&gt;
            &lt;/jk-tooltip&gt;
            &lt;jk-tooltip content=&quot;Right Bottom Tooltip Text&quot; placement=&quot;right-end&quot;&gt;
                &lt;jk-button&gt;Right Bottom&lt;/jk-button&gt;
            &lt;/jk-tooltip&gt;
        &lt;/div&gt;
        &lt;div class=&quot;bottom&quot;&gt;
            &lt;jk-tooltip content=&quot;Bottom Left Tooltip Text&quot; placement=&quot;bottom-start&quot;&gt;
                &lt;jk-button&gt;Bottom Left&lt;/jk-button&gt;
            &lt;/jk-tooltip&gt;
            &lt;jk-tooltip content=&quot;Bottom Center Tooltip Text&quot; placement=&quot;bottom&quot;&gt;
                &lt;jk-button&gt;Bottom&lt;/jk-button&gt;
            &lt;/jk-tooltip&gt;
            &lt;jk-tooltip content=&quot;Bottom Right Tooltip Text&quot; placement=&quot;bottom-end&quot;&gt;
                &lt;jk-button&gt;Bottom Right&lt;/jk-button&gt;
            &lt;/jk-tooltip&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
.box {
    width: 400px;

    .top {
        text-align: center;
    }

    .left {
        float: left;
        width: 60px;
    }

    .right {
        float: right;
        width: 60px;
    }

    .bottom {
        clear: both;
        text-align: center;
    }

    :deep(.jk-button) {
        margin: 4px;
    }

    .left .el-tooltip__popper,
    .right .el-tooltip__popper {
        padding: 8px 10px;
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Themes</h3>
        <p>
            The Tooltip component offers two different themes:
            <code>dark</code>
            and
            <code>light</code>
            .
        </p>
        <p>
            Change the theme by setting the
            <code>effect</code>
            attribute, with the default being
            <code>dark</code>
            .
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-tooltip content=&quot;Default theme&quot; placement=&quot;top&quot;&gt;
        &lt;jk-button&gt;Default theme&lt;/jk-button&gt;
    &lt;/jk-tooltip&gt;
    &lt;jk-tooltip content=&quot;Light theme&quot; effect=&quot;light&quot;&gt;
        &lt;jk-button&gt;Light&lt;/jk-button&gt;
    &lt;/jk-tooltip&gt;
    &lt;jk-tooltip content=&quot;Error theme&quot; effect=&quot;error&quot;&gt;
        &lt;jk-button&gt;Error&lt;/jk-button&gt;
    &lt;/jk-tooltip&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Manual Control</h3>
        <p>
            Control whether to activate manually through the
            <code>manual</code>
            attribute, and then freely operate through the
            <code>show</code>
            and
            <code>hide</code>
            methods of the component.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-tooltip content=&quot;Default theme&quot; placement=&quot;top&quot; manual effect=&quot;light&quot; ref=&quot;tooltip&quot;&gt;
        &lt;jk-button @click=&quot;handleClick&quot;&gt;
            Click to @(model.show ? &quot;Close&quot; : &quot;Open&quot;)
        &lt;/jk-button&gt;
    &lt;/jk-tooltip&gt;
&lt;/template&gt;

&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        show: false
    };

    handleClick() {
        let tooltip = this.$getRef(&quot;tooltip&quot;)?.component;
        if (this.model.show) {
            tooltip?.hide();
        } else {
            tooltip?.show();
        }

        this.model.show = !this.model.show;
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>More Content</h3>
        <p>Display multi-line text or set the format of the text content.</p>
        <p>
            Use the named section to distribute the
            <code>content</code>
            , replacing the
            <code>content</code>
            attribute in the
            <code>tooltip</code>
            .
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-tooltip placement=&quot;top&quot;&gt;
        &lt;jk-button&gt;More content&lt;/jk-button&gt;
        @section(&quot;content&quot;) {
            Hahaha
            &lt;br /&gt;
            hahahahahaha
        }
    &lt;/jk-tooltip&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Disabled</h3>
        <p>
            Set the disabled state of the tooltip through the
            <code>disabled</code>
            value.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-tooltip content=&quot;Default theme&quot; placement=&quot;top&quot;&gt;
        &lt;jk-button&gt;Default theme&lt;/jk-button&gt;
    &lt;/jk-tooltip&gt;
    &lt;jk-tooltip content=&quot;Default theme&quot; placement=&quot;top&quot; disabled&gt;
        &lt;jk-button&gt;Disabled&lt;/jk-button&gt;
    &lt;/jk-tooltip&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Size</h3>
        <p>
            Set the size of the tooltip through the
            <code>size</code>
            value.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo6)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-tooltip content=&quot;Default theme&quot; placement=&quot;top&quot;&gt;
            &lt;jk-button&gt;Default size&lt;/jk-button&gt;
        &lt;/jk-tooltip&gt;
        &lt;jk-tooltip content=&quot;Light theme&quot; effect=&quot;light&quot;&gt;
            &lt;jk-button&gt;Default size&lt;/jk-button&gt;
        &lt;/jk-tooltip&gt;
        &lt;jk-tooltip content=&quot;Error theme&quot; effect=&quot;error&quot;&gt;
            &lt;jk-button&gt;Default size&lt;/jk-button&gt;
        &lt;/jk-tooltip&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-tooltip content=&quot;Default theme&quot; placement=&quot;top&quot; size=&quot;medium&quot;&gt;
            &lt;jk-button&gt;medium&lt;/jk-button&gt;
        &lt;/jk-tooltip&gt;
        &lt;jk-tooltip content=&quot;Light theme&quot; effect=&quot;light&quot; size=&quot;medium&quot;&gt;
            &lt;jk-button&gt;medium&lt;/jk-button&gt;
        &lt;/jk-tooltip&gt;
        &lt;jk-tooltip content=&quot;Error theme&quot; effect=&quot;error&quot; size=&quot;medium&quot;&gt;
            &lt;jk-button&gt;medium&lt;/jk-button&gt;
        &lt;/jk-tooltip&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-tooltip content=&quot;Default theme&quot; placement=&quot;top&quot; size=&quot;small&quot;&gt;
            &lt;jk-button&gt;small&lt;/jk-button&gt;
        &lt;/jk-tooltip&gt;
        &lt;jk-tooltip content=&quot;Light theme&quot; effect=&quot;light&quot; size=&quot;small&quot;&gt;
            &lt;jk-button&gt;small&lt;/jk-button&gt;
        &lt;/jk-tooltip&gt;
        &lt;jk-tooltip content=&quot;Error theme&quot; effect=&quot;error&quot; size=&quot;small&quot;&gt;
            &lt;jk-button&gt;small&lt;/jk-button&gt;
        &lt;/jk-tooltip&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-tooltip content=&quot;Default theme&quot; placement=&quot;top&quot; size=&quot;mini&quot;&gt;
            &lt;jk-button&gt;mini&lt;/jk-button&gt;
        &lt;/jk-tooltip&gt;
        &lt;jk-tooltip content=&quot;Light theme&quot; effect=&quot;light&quot; size=&quot;mini&quot;&gt;
            &lt;jk-button&gt;mini&lt;/jk-button&gt;
        &lt;/jk-tooltip&gt;
        &lt;jk-tooltip content=&quot;Error theme&quot; effect=&quot;error&quot; size=&quot;mini&quot;&gt;
            &lt;jk-button&gt;mini&lt;/jk-button&gt;
        &lt;/jk-tooltip&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Maximum Width</h3>
        <p>
            If the content is too long, you can configure the
            <code>maxWidth</code>
            to set the maximum width, so that the content can be displayed in multiple lines.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo7)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-tooltip
        content=&quot;Extremely long content, extremely long content, extremely long content, extremely long content, extremely long content, extremely long content, extremely long content, extremely long content, extremely long content, extremely long content, extremely long content, extremely long content&quot;
        maxWidth=&quot;150px&quot;
        placement=&quot;top&quot;&gt;
        &lt;jk-button&gt;Extremely long content&lt;/jk-button&gt;
    &lt;/jk-tooltip&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Optional Values</th>
                    <th>Default Value</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>effect</td>
                    <td>The default provided theme</td>
                    <td>String</td>
                    <td>dark/light / error</td>
                    <td>dark</td>
                </tr>
                <tr>
                    <td>content</td>
                    <td>
                        The content to be displayed. DOM can also be passed in through the section
                        <code>content</code>
                    </td>
                    <td>String</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>placement</td>
                    <td>The appearance position of the Tooltip</td>
                    <td>String</td>
                    <td>
                        top/top-start/top-end/bottom/bottom-start/bottom-end/left/left-start/left-end/right/right-start/right-end
                    </td>
                    <td>bottom</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>Whether the Tooltip is available</td>
                    <td>Boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>offset</td>
                    <td>The offset of the appearance position</td>
                    <td>Number</td>
                    <td>—</td>
                    <td>0</td>
                </tr>
                <tr>
                    <td>transition</td>
                    <td>Define the fade-in animation</td>
                    <td>String</td>
                    <td>—</td>
                    <td>jk-fade-in</td>
                </tr>
                <tr>
                    <td>open-delay</td>
                    <td>Delay the appearance, in milliseconds</td>
                    <td>Number</td>
                    <td>—</td>
                    <td>0</td>
                </tr>
                <tr>
                    <td>close-delay</td>
                    <td>Delay the hiding, in milliseconds (debounce)</td>
                    <td>Number</td>
                    <td>—</td>
                    <td>200</td>
                </tr>
                <tr>
                    <td>manual</td>
                    <td>
                        Manual control mode. After setting it to true, the mouseenter and mouseleave events will not take effect
                    </td>
                    <td>Boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>size</td>
                    <td>Size configuration</td>
                    <td>string</td>
                    <td>medium、small、mini</td>
                    <td></td>
                </tr>
                <tr>
                    <td>maxWidth</td>
                    <td>Maximum width</td>
                    <td>string</td>
                    <td>-</td>
                    <td>300px</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo7 from "../../components/tooltip/demo7.joker";
import DEMO_JOKER_demo6 from "../../components/tooltip/demo6.joker";
import DEMO_JOKER_demo5 from "../../components/tooltip/demo5.joker";
import DEMO_JOKER_demo4 from "../../components/tooltip/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/tooltip/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/tooltip/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/tooltip/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo7,
        DEMO_JOKER_demo6,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>
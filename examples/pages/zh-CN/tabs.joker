<template>
<div ref='container' class='joker-demo-container'>
<h2>Tabs 标签页</h2>
<p>分隔内容上有关联但属于不同类别的数据集合。</p>
<h3>基本用法</h3>
<p>基础的、简洁的标签页。</p>
<DemoContainer component="@(components.DEMO_JOKER_demo1)">
<pre><code class="language-html">&lt;template&gt;
    &lt;jk-tabs&gt;
        &lt;jk-tab-panel label=&quot;Home&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Home&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Issues&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Issues&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Repository Activity&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Repository Activity&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Settings&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Settings&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Home&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Home&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Issues&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Issues&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Repository Activity&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Repository Activity&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Settings&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Settings&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Home&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Home&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Issues&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Issues&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Repository Activity&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Repository Activity&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Settings&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Settings&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
    &lt;/jk-tabs&gt;
&lt;/template&gt;

&lt;style&gt;
.demo-content {
    font-size: 24px;
    font-weight: bold;
    padding: 20px 10px;
    color: var(--jk-color-text-secondary);
}
&lt;/style&gt;
</code></pre>
</DemoContainer>
<h3>位置</h3>
<p>可通过<code>position</code>设置标签的位置。</p>
<DemoContainer component="@(components.DEMO_JOKER_demo2)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;@model.position&quot; @change=&quot;handlePositionChange&quot;&gt;
            &lt;jk-radio-button value=&quot;top&quot;&gt;top&lt;/jk-radio-button&gt;
            &lt;jk-radio-button value=&quot;right&quot;&gt;right&lt;/jk-radio-button&gt;
            &lt;jk-radio-button value=&quot;bottom&quot;&gt;bottom&lt;/jk-radio-button&gt;
            &lt;jk-radio-button value=&quot;left&quot;&gt;left&lt;/jk-radio-button&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;jk-tabs position=&quot;@model.position&quot;&gt;
        &lt;jk-tab-panel label=&quot;Home&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Home&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Issues&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Issues&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Repository Activity&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Repository Activity&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Settings&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Settings&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
    &lt;/jk-tabs&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        position: &quot;top&quot;
    };

    handlePositionChange(e: VNode.Event&lt;string&gt;) {
        this.model.position = e.data;
    }
}
&lt;/script&gt;
&lt;style&gt;
.demo-content {
    font-size: 24px;
    font-weight: bold;
    padding: 20px 10px;
    color: var(--jk-color-text-secondary);
}
&lt;/style&gt;
</code></pre>
</DemoContainer>
<h3>自定义标签页标题</h3>
<p>可通过<code>jk-tab-panel</code>中的<strong>label</strong>区块自定义标签标题。</p>
<DemoContainer component="@(components.DEMO_JOKER_demo3)">
<pre><code class="language-html">&lt;template&gt;
    &lt;jk-tabs&gt;
        &lt;jk-tab-panel&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Shoot&lt;/div&gt;
            @section(&quot;label&quot;) {
                &lt;i class=&quot;jk-icon-s-camera&quot; /&gt;
                Shoot
            }
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Issues&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Issues&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Repository Activity&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Repository Activity&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Settings&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Settings&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
    &lt;/jk-tabs&gt;
&lt;/template&gt;

&lt;style&gt;
.demo-content {
    font-size: 24px;
    font-weight: bold;
    padding: 20px 10px;
    color: var(--jk-color-text-secondary);
}
&lt;/style&gt;
</code></pre>
</DemoContainer>
<h3>卡片风格</h3>
<p>可通过配置<code>card</code>启用卡片风格。</p>
<DemoContainer component="@(components.DEMO_JOKER_demo4)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;@model.position&quot; @change=&quot;handlePositionChange&quot;&gt;
            &lt;jk-radio-button value=&quot;top&quot;&gt;top&lt;/jk-radio-button&gt;
            &lt;jk-radio-button value=&quot;right&quot;&gt;right&lt;/jk-radio-button&gt;
            &lt;jk-radio-button value=&quot;bottom&quot;&gt;bottom&lt;/jk-radio-button&gt;
            &lt;jk-radio-button value=&quot;left&quot;&gt;left&lt;/jk-radio-button&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;jk-tabs position=&quot;@model.position&quot; card&gt;
        &lt;jk-tab-panel label=&quot;Home&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Home&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Issues&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Issues&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Repository Activity&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Repository Activity&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
        &lt;jk-tab-panel label=&quot;Settings&quot;&gt;
            &lt;div class=&quot;demo-content&quot;&gt;Settings&lt;/div&gt;
        &lt;/jk-tab-panel&gt;
    &lt;/jk-tabs&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        position: &quot;top&quot;
    };

    handlePositionChange(e: VNode.Event&lt;string&gt;) {
        this.model.position = e.data;
    }
}
&lt;/script&gt;
&lt;style&gt;
.demo-content {
    font-size: 24px;
    font-weight: bold;
    padding: 20px 10px;
    color: var(--jk-color-text-secondary);
}
&lt;/style&gt;
</code></pre>
</DemoContainer>
<h3>Attributes</h3>
<table class="mkd-table">
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>类型</th>
<th>可选值</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>value</td>
<td>默认选中 tab 值，对应 tab-panel 中的 name</td>
<td>string</td>
<td>-</td>
<td>—</td>
</tr>
<tr>
<td>card</td>
<td>卡片主题</td>
<td>boolean</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>position</td>
<td>tab 位置</td>
<td>string</td>
<td>top/bottom/right/left</td>
<td>top</td>
</tr>
<tr>
<td>fullHeight</td>
<td>启用后内容区域高度会自动撑满</td>
<td>boolean</td>
<td>-</td>
<td>-</td>
</tr>
</tbody>
</table>
<h3>Events</h3>
<table class="mkd-table">
<thead>
<tr>
<th>事件名</th>
<th>说明</th>
<th>参数</th>
</tr>
</thead>
<tbody>
<tr>
<td>change</td>
<td>当选中 tab 变更时触发</td>
<td>tab 项信息</td>
</tr>
<tr>
<td>click</td>
<td>当 tab 点击时触发</td>
<td>tab 项信息</td>
</tr>
</tbody>
</table>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo4 from '../../components/tabs/demo4.joker';
import DEMO_JOKER_demo3 from '../../components/tabs/demo3.joker';
import DEMO_JOKER_demo2 from '../../components/tabs/demo2.joker';
import DEMO_JOKER_demo1 from '../../components/tabs/demo1.joker';
export default class extends Component {
components={
BottomNav,
DEMO_JOKER_demo4,
DEMO_JOKER_demo3,
DEMO_JOKER_demo2,
DEMO_JOKER_demo1
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>
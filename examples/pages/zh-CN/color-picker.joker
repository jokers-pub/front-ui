<template>
    <div ref="container" class="joker-demo-container">
        <h2>ColorPicker 颜色选择器</h2>
        <p>用于颜色选择，支持多种格式。</p>
        <h3>基础用法</h3>
        <p>使用设置 value 变量进行进行默认值的展示，并通过过去 value 来实现取值</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-color-picker value=&quot;@model.color&quot; @change=&quot;handleChange&quot; /&gt;
        &lt;p&gt;
            @model.color
        &lt;/p&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-color-picker value=&quot;#409EFF&quot; /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;

&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        color: &quot;&quot;
    };

    handleChange(e: VNode.Event&lt;string&gt;) {
        this.model.color = e.data;
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>选择透明度</h3>
        <p>
            ColorPicker 支持普通颜色，也支持带 Alpha 通道的颜色，通过
            <code>show-alpha</code>
            属性即可控制是否支持透明度的选择。
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-color-picker show-alpha value=&quot;rgba(19, 206, 102, 0.8)&quot; format=&quot;rgba&quot; /&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>不同尺寸</h3>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot;&gt;
        &lt;jk-color-picker value=&quot;#409EFF&quot; /&gt;
        &lt;jk-color-picker value=&quot;#409EFF&quot; size=&quot;medium&quot; /&gt;
        &lt;jk-color-picker value=&quot;#409EFF&quot; size=&quot;small&quot; /&gt;
        &lt;jk-color-picker value=&quot;#409EFF&quot; size=&quot;mini&quot; /&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style scoped lang=&quot;scss&quot;&gt;
.demo-container {
    :deep(.jk-color-picker) {
        margin-right: 15px;
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>只读/禁用</h3>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot;&gt;
        &lt;jk-color-picker value=&quot;#409EFF&quot; readonly /&gt;
        &lt;jk-color-picker value=&quot;#409EFF&quot; size=&quot;medium&quot; disabled /&gt;
        &lt;jk-color-picker value=&quot;#409EFF&quot; size=&quot;small&quot; readonly /&gt;
        &lt;jk-color-picker value=&quot;#409EFF&quot; size=&quot;mini&quot; disabled /&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style scoped lang=&quot;scss&quot;&gt;
.demo-container {
    :deep(.jk-color-picker) {
        margin-right: 15px;
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>参数</th>
                    <th>说明</th>
                    <th>类型</th>
                    <th>可选值</th>
                    <th>默认值</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>value</td>
                    <td>绑定值</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>是否禁用</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>class</td>
                    <td>自定义 class 样式</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>size</td>
                    <td>尺寸</td>
                    <td>string</td>
                    <td>medium / small / mini</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>show-alpha</td>
                    <td>是否支持透明度选择</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>format</td>
                    <td>写入颜色的格式</td>
                    <td>string</td>
                    <td>hex / rgba</td>
                    <td>-</td>
                </tr>
            </tbody>
        </table>
        <h3>Event</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>事件名称</th>
                    <th>说明</th>
                    <th>回调参数</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>change</td>
                    <td>当绑定值变化时触发</td>
                    <td>当前值</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo4 from "../../components/color-picker/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/color-picker/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/color-picker/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/color-picker/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>
<template>
<div ref='container' class='joker-demo-container'>
<h2>Radio 单选框</h2>
<p>在一组备选项中进行单选</p>
<h3>基础用法</h3>
<p>由于选项默认可见，不宜过多，若选项过多，建议使用 Select 选择器。</p>
<p>要使用 Radio 组件 Radio <code>value</code>属性的值，<code>value</code>可以是<code>String</code>、<code>Number</code>或<code>Boolean</code>。</p>
<DemoContainer component="@(components.DEMO_JOKER_demo1)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;2&quot;&gt;
            &lt;jk-radio value=&quot;1&quot;&gt;备选项1&lt;/jk-radio&gt;
            &lt;jk-radio value=&quot;2&quot;&gt;备选项2&lt;/jk-radio&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;@false&quot;&gt;
            &lt;jk-radio value=&quot;@true&quot;&gt;是&lt;/jk-radio&gt;
            &lt;jk-radio value=&quot;@false&quot;&gt;否&lt;/jk-radio&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group&gt;
            &lt;jk-radio value=&quot;@true&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio value=&quot;@false&quot;&gt;&lt;/jk-radio&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;


</code></pre>
</DemoContainer>
<h3>禁用状态</h3>
<p>单选框不可用的状态</p>
<p>只需在<code>jk-radio</code>元素中设置<code>disabled</code>属性即可，它接收一个<code>Boolean</code>，<code>true</code>为禁用。</p>
<DemoContainer component="@(components.DEMO_JOKER_demo2)">
<pre><code class="language-html">&lt;template&gt;
    &lt;jk-radio disabled value=&quot;1&quot;&gt;备选项&lt;/jk-radio&gt;
    &lt;jk-radio disabled value=&quot;2&quot;&gt;备选项&lt;/jk-radio&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>单选框组</h3>
<p>适用于在多个互斥的选项中选择的场景</p>
<p>结合父元素<code>jk-radio-group</code>和子元素<code>jk-radio</code>可以实现单选组，在<code>jk-radio-group</code>上绑定<code>value</code>，在<code>jk-radio</code>上设置好<code>label</code>即可，无需再给每一个<code>jk-radio</code>绑定变量，另外，还提供了<code>change</code>事件来响应选择的变化，它会传入一个参数<code>value</code>。</p>
<DemoContainer component="@(components.DEMO_JOKER_demo3)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;@model.value&quot; @change=&quot;handleChange&quot;&gt;
            &lt;jk-radio value=&quot;1&quot;&gt;备选项1&lt;/jk-radio&gt;
            &lt;jk-radio value=&quot;2&quot;&gt;备选项2&lt;/jk-radio&gt;
            &lt;jk-radio value=&quot;3&quot;&gt;备选项3&lt;/jk-radio&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;p&gt;
        已选中：@model.value
    &lt;/p&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        value: &quot;2&quot;
    };
    handleChange(e: VNode.Event) {
        this.model.value = e.data!;
    }
}
&lt;/script&gt;
</code></pre>
</DemoContainer>
<h3>带有边框</h3>
<p>设置<code>border</code>属性可以渲染为带有边框的单选框。<code>jk-raido</code>只有在设置 <code>border</code> 时，<code>size</code>属性才会生效</p>
<DemoContainer component="@(components.DEMO_JOKER_demo4)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;北京&quot;&gt;
            &lt;jk-radio border label=&quot;上海&quot; value=&quot;上海&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;北京&quot; value=&quot;北京&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;广州&quot; value=&quot;广州&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;深圳&quot; value=&quot;深圳&quot;&gt;&lt;/jk-radio&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;北京&quot; size=&quot;medium&quot;&gt;
            &lt;jk-radio border label=&quot;上海&quot; value=&quot;上海&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;北京&quot; value=&quot;北京&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;广州&quot; value=&quot;广州&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;深圳&quot; value=&quot;深圳&quot;&gt;&lt;/jk-radio&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;北京&quot; size=&quot;small&quot;&gt;
            &lt;jk-radio border label=&quot;上海&quot; value=&quot;上海&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;北京&quot; value=&quot;北京&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;广州&quot; value=&quot;广州&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;深圳&quot; disabled value=&quot;深圳&quot;&gt;&lt;/jk-radio&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;北京&quot; size=&quot;mini&quot;&gt;
            &lt;jk-radio border label=&quot;上海&quot; value=&quot;上海&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;北京&quot; disabled value=&quot;北京&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;广州&quot; value=&quot;广州&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;深圳&quot; value=&quot;深圳&quot;&gt;&lt;/jk-radio&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;北京&quot; size=&quot;mini&quot; disabled&gt;
            &lt;jk-radio border label=&quot;上海&quot; value=&quot;上海&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;北京&quot; value=&quot;北京&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;广州&quot; value=&quot;广州&quot;&gt;&lt;/jk-radio&gt;
            &lt;jk-radio border label=&quot;深圳&quot; value=&quot;深圳&quot;&gt;&lt;/jk-radio&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>按钮样式</h3>
<p>按钮样式的单选组合。</p>
<p>只需要把<code>jk-radio</code>元素换成<code>jk-radio-button</code>元素即可，此外，Joker-UI 还提供了<code>size</code>属性。</p>
<DemoContainer component="@(components.DEMO_JOKER_demo5)">
<pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;北京&quot;&gt;
            &lt;jk-radio-button label=&quot;上海&quot; value=&quot;上海&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;北京&quot; value=&quot;北京&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;广州&quot; value=&quot;广州&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;深圳&quot; value=&quot;深圳&quot;&gt;&lt;/jk-radio-button&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;北京&quot; size=&quot;medium&quot;&gt;
            &lt;jk-radio-button label=&quot;上海&quot; value=&quot;上海&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;北京&quot; value=&quot;北京&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;广州&quot; value=&quot;广州&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;深圳&quot; value=&quot;深圳&quot;&gt;&lt;/jk-radio-button&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;北京&quot; size=&quot;small&quot;&gt;
            &lt;jk-radio-button label=&quot;上海&quot; value=&quot;上海&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;北京&quot; value=&quot;北京&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;广州&quot; value=&quot;广州&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;深圳&quot; disabled value=&quot;深圳&quot;&gt;&lt;/jk-radio-button&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;北京&quot; size=&quot;mini&quot;&gt;
            &lt;jk-radio-button label=&quot;上海&quot; value=&quot;上海&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;北京&quot; disabled value=&quot;北京&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;广州&quot; value=&quot;广州&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;深圳&quot; disabled value=&quot;深圳&quot;&gt;&lt;/jk-radio-button&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-radio-group value=&quot;北京&quot; size=&quot;mini&quot; disabled&gt;
            &lt;jk-radio-button label=&quot;上海&quot; value=&quot;上海&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;北京&quot; value=&quot;北京&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;广州&quot; value=&quot;广州&quot;&gt;&lt;/jk-radio-button&gt;
            &lt;jk-radio-button label=&quot;深圳&quot; value=&quot;深圳&quot;&gt;&lt;/jk-radio-button&gt;
        &lt;/jk-radio-group&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
</DemoContainer>
<h3>Radio Attributes</h3>
<table class="mkd-table">
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>类型</th>
<th>可选值</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>value</td>
<td>绑定值</td>
<td>string / number / boolean</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>class</td>
<td>自定义 class 样式</td>
<td>string</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>label</td>
<td>Radio 的 value</td>
<td>string / number / boolean</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>hide-label</td>
<td>是否隐藏 label</td>
<td>boolean</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>disabled</td>
<td>是否禁用</td>
<td>boolean</td>
<td>—</td>
<td>false</td>
</tr>
<tr>
<td>border</td>
<td>是否显示边框</td>
<td>boolean</td>
<td>—</td>
<td>false</td>
</tr>
<tr>
<td>size</td>
<td>Radio 的尺寸，仅在 border 为真时有效</td>
<td>string</td>
<td>medium / small / mini</td>
<td>—</td>
</tr>
<tr>
<td>name</td>
<td>原生 name 属性</td>
<td>string</td>
<td>—</td>
<td>—</td>
</tr>
</tbody>
</table>
<h3>Radio Events</h3>
<table class="mkd-table">
<thead>
<tr>
<th>事件名称</th>
<th>说明</th>
<th>回调参数</th>
</tr>
</thead>
<tbody>
<tr>
<td>change</td>
<td>选中状态变化时触发的事件</td>
<td>变换后的值</td>
</tr>
</tbody>
</table>
<h3>Radio-button Attributes</h3>
<table class="mkd-table">
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>类型</th>
<th>可选值</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>value</td>
<td>绑定值</td>
<td>string / number / boolean</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>label</td>
<td>Radio 的 value</td>
<td>string / number / boolean</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>disabled</td>
<td>是否禁用</td>
<td>boolean</td>
<td>—</td>
<td>false</td>
</tr>
<tr>
<td>size</td>
<td>Radio 的尺寸，仅在 border 为真时有效</td>
<td>string</td>
<td>medium / small / mini</td>
<td>—</td>
</tr>
<tr>
<td>name</td>
<td>原生 name 属性</td>
<td>string</td>
<td>—</td>
<td>—</td>
</tr>
</tbody>
</table>
<h3>Radio-button Events</h3>
<table class="mkd-table">
<thead>
<tr>
<th>事件名称</th>
<th>说明</th>
<th>回调参数</th>
</tr>
</thead>
<tbody>
<tr>
<td>change</td>
<td>选中状态变化时触发的事件</td>
<td>变换后的值</td>
</tr>
</tbody>
</table>
<h3>Radio-group Attributes</h3>
<table class="mkd-table">
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>类型</th>
<th>可选值</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>value</td>
<td>绑定值</td>
<td>string / number / boolean</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>size</td>
<td>单选框组尺寸，仅对按钮形式的 Radio 或带有边框的 Radio 有效</td>
<td>string</td>
<td>medium / small / mini</td>
<td>—</td>
</tr>
<tr>
<td>disabled</td>
<td>是否禁用</td>
<td>boolean</td>
<td>—</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3>Radio-group Events</h3>
<table class="mkd-table">
<thead>
<tr>
<th>事件名称</th>
<th>说明</th>
<th>回调参数</th>
</tr>
</thead>
<tbody>
<tr>
<td>change</td>
<td>选中状态变化时触发的事件</td>
<td>变换后的值</td>
</tr>
</tbody>
</table>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo5 from '../../components/radio/demo5.joker';
import DEMO_JOKER_demo4 from '../../components/radio/demo4.joker';
import DEMO_JOKER_demo3 from '../../components/radio/demo3.joker';
import DEMO_JOKER_demo2 from '../../components/radio/demo2.joker';
import DEMO_JOKER_demo1 from '../../components/radio/demo1.joker';
export default class extends Component {
components={
BottomNav,
DEMO_JOKER_demo5,
DEMO_JOKER_demo4,
DEMO_JOKER_demo3,
DEMO_JOKER_demo2,
DEMO_JOKER_demo1
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>
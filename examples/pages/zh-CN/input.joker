<template>
    <div ref="container" class="joker-demo-container">
        <h2>Input 输入框</h2>
        <p>通过鼠标或键盘输入字符</p>
        <h3>基础用法</h3>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:180px&quot;&gt;
        &lt;jk-input placeholder=&quot;Please enter the content&quot; @input=&quot;handleInput&quot; /&gt;
    &lt;/div&gt;
    &lt;p&gt;
        @model.val
    &lt;/p&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        val: &quot;&quot;
    };
    handleInput(e: VNode.Event) {
        this.model.val = e.data!;
    }
}
&lt;/script&gt;
&lt;style scoped lang=&quot;scss&quot;&gt;
p {
    padding: 10px 0;
    line-height: 1.2;
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>禁用状态</h3>
        <p>
            通过
            <code>disabled</code>
            属性指定是否禁用 input 组件
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:180px&quot;&gt;
        &lt;jk-input placeholder=&quot;Please enter the content&quot; disabled /&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>可清空</h3>
        <p>
            使用
            <code>clearable</code>
            属性即可得到一个可清空的输入框
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:180px&quot;&gt;
        &lt;jk-input placeholder=&quot;Please enter the content&quot; clearable /&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>带 icon 的输入框</h3>
        <p>带有图标标记输入类型</p>
        <p>
            可以通过
            <code>prefix-icon</code>
            和
            <code>suffix-icon</code>
            属性在 input 组件首部和尾部增加显示图标，也可以通过
            <code>section</code>
            来放置图标。
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot;&gt;
        &lt;DemoRow&gt;
            属性方式：
            &lt;jk-input placeholder=&quot;Please select a date&quot; suffix-icon=&quot;jk-icon-date&quot; /&gt;
            &lt;jk-input placeholder=&quot;Please enter the content&quot; prefix-icon=&quot;jk-icon-search&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            section方式：
            &lt;jk-input placeholder=&quot;Please select a date&quot;&gt;
                @section(&quot;suffix&quot;) {
                    &lt;i class=&quot;jk-icon-date&quot; /&gt;
                }
            &lt;/jk-input&gt;
            &lt;jk-input placeholder=&quot;Please enter the content&quot;&gt;
                @section(&quot;prefix&quot;) {
                    &lt;i class=&quot;jk-icon-search&quot; /&gt;
                }
            &lt;/jk-input&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
:deep(.demo-container .jk-input) {
    width: 180px;
    margin-right: 15px;
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>复合型输入框</h3>
        <p>可前置或后置元素，一般为标签或按钮</p>
        <p>可通过 section 来指定在 input 中前置或者后置内容。</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-input placeholder=&quot;Please enter the content&quot;&gt;
            @section(&quot;prepend&quot;) {
                Http://
            }
        &lt;/jk-input&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-input placeholder=&quot;Please enter the content&quot;&gt;
            @section(&quot;append&quot;) {
                .com
            }
        &lt;/jk-input&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;

</code></pre>
        </DemoContainer>
        <h3>尺寸</h3>
        <p>
            可通过
            <code>size</code>
            属性指定输入框的尺寸，除了默认的大小外，还提供了 medium、small 和 mini 三种尺寸。
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo6)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;demo-container&quot;&gt;
        &lt;DemoRow&gt;
            &lt;jk-input placeholder=&quot;Please enter the content&quot; suffix-icon=&quot;jk-icon-date&quot; /&gt;
            &lt;jk-input placeholder=&quot;Please enter the content&quot; size=&quot;medium&quot; suffix-icon=&quot;jk-icon-date&quot; /&gt;
        &lt;/DemoRow&gt;
        &lt;DemoRow&gt;
            &lt;jk-input placeholder=&quot;Please enter the content&quot; size=&quot;small&quot; suffix-icon=&quot;jk-icon-date&quot; autofocus /&gt;
            &lt;jk-input placeholder=&quot;Please enter the content&quot; size=&quot;mini&quot; suffix-icon=&quot;jk-icon-date&quot; /&gt;
        &lt;/DemoRow&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
:deep(.demo-container .jk-input) {
    width: 180px;
    margin-right: 15px;
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>输入长度限制</h3>
        <p>
            <code>maxlength</code>
            和
            <code>minlength</code>
            是原生属性，用来限制输入框的字符长度，其中字符长度是用 Javascript 的字符串长度统计的。对于类型为
            <code>text</code>
            或
            <code>textarea</code>
            的输入框，在使用
            <code>maxlength</code>
            属性限制最大输入长度的同时，可通过设置
            <code>show-word-limit</code>
            属性来展示字数统计。
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo7)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div style=&quot;width:180px&quot;&gt;
        &lt;jk-input placeholder=&quot;Please enter&quot; maxlength=&quot;10&quot; show-word-limit /&gt;
    &lt;/div&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Input Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>参数</th>
                    <th>说明</th>
                    <th>类型</th>
                    <th>可选值</th>
                    <th>默认值</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>type</td>
                    <td>类型</td>
                    <td>string</td>
                    <td>
                        text，
                        <a
                            href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types"
                            target="_blank">
                            原生 input 的 type 值
                        </a>
                    </td>
                    <td>text</td>
                </tr>
                <tr>
                    <td>value</td>
                    <td>绑定值</td>
                    <td>string / number</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>class</td>
                    <td>自定义 class 样式</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>maxlength</td>
                    <td>原生属性，最大输入长度</td>
                    <td>number</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>minlength</td>
                    <td>原生属性，最小输入长度</td>
                    <td>number</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>show-word-limit</td>
                    <td>是否显示输入字数统计</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>placeholder</td>
                    <td>输入框占位文本</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>clearable</td>
                    <td>是否可清空</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>禁用</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>size</td>
                    <td>输入框尺寸</td>
                    <td>string</td>
                    <td>medium / small / mini</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>prefix-icon</td>
                    <td>输入框头部图标</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>suffix-icon</td>
                    <td>输入框尾部图标</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>autocomplete</td>
                    <td>原生属性，自动补全</td>
                    <td>string</td>
                    <td>on, off</td>
                    <td>off</td>
                </tr>
                <tr>
                    <td>name</td>
                    <td>原生属性</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>readonly</td>
                    <td>原生属性，是否只读</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>autofocus</td>
                    <td>原生属性，自动获取焦点</td>
                    <td>boolean</td>
                    <td>true, false</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>label</td>
                    <td>输入框关联的 label 文字</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>tabindex</td>
                    <td>输入框的 tabindex</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>status-icon</td>
                    <td>是否展示验证状态</td>
                    <td>boolean</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
            </tbody>
        </table>
        <h3>Input Sections</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>name</th>
                    <th>说明</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>prefix</td>
                    <td>输入框头部内容</td>
                </tr>
                <tr>
                    <td>suffix</td>
                    <td>输入框尾部内容</td>
                </tr>
                <tr>
                    <td>prepend</td>
                    <td>输入框前置内容</td>
                </tr>
                <tr>
                    <td>append</td>
                    <td>输入框后置内容</td>
                </tr>
            </tbody>
        </table>
        <h3>Input Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>事件名称</th>
                    <th>说明</th>
                    <th>回调参数</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>blur</td>
                    <td>在 Input 失去焦点时触发</td>
                    <td>VNode.Event</td>
                </tr>
                <tr>
                    <td>focus</td>
                    <td>在 Input 获得焦点时触发</td>
                    <td>VNode.Event</td>
                </tr>
                <tr>
                    <td>change</td>
                    <td>仅在输入框失去焦点或用户按下回车时触发</td>
                    <td>VNode.Event</td>
                </tr>
                <tr>
                    <td>input</td>
                    <td>在 Input 值改变时触发</td>
                    <td>VNode.Event</td>
                </tr>
                <tr>
                    <td>clear</td>
                    <td>
                        在点击由
                        <code>clearable</code>
                        属性生成的清空按钮时触发
                    </td>
                    <td>VNode.Event</td>
                </tr>
            </tbody>
        </table>
        <h3>Input Methods</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>方法名</th>
                    <th>说明</th>
                    <th>参数</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>focus</td>
                    <td>使 input 获取焦点</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>blur</td>
                    <td>使 input 失去焦点</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>select</td>
                    <td>选中 input 中的文字</td>
                    <td>—</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo7 from "../../components/input/demo7.joker";
import DEMO_JOKER_demo6 from "../../components/input/demo6.joker";
import DEMO_JOKER_demo5 from "../../components/input/demo5.joker";
import DEMO_JOKER_demo4 from "../../components/input/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/input/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/input/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/input/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo7,
        DEMO_JOKER_demo6,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>
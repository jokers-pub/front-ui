<template>
    <div ref="container" class="joker-demo-container">
        <h2>Rate 评分</h2>
        <p>评分组件</p>
        <h3>基础用法</h3>
        <p>
            评分默认被分为三个等级，可以利用颜色数组对分数及情感倾向进行分级（默认情况下不区分颜色）。三个等级所对应的颜色用
            <code>colors</code>
            属性设置，而它们对应的两个阈值则通过
            <code>low-threshold</code>
            和
            <code>high-threshold</code>
            设定。你也可以通过传入颜色对象来自定义分段，键名为分段的界限值，键值为对应的颜色。
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;row&quot;&gt;
        &lt;span&gt;Default without color distinction:&lt;/span&gt;
        &lt;jk-rate /&gt;
    &lt;/div&gt;
    &lt;div class=&quot;row&quot;&gt;
        &lt;span&gt;With color distinction:&lt;/span&gt;
        &lt;jk-rate colors=&quot;@(['#99A9BF', '#F7BA2A', '#FF9900'])&quot; /&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style scoped lang=&quot;scss&quot;&gt;
.row {
    padding: 30px 24px;
    overflow: hidden;
    border-bottom: 1px solid #eff2f6;

    span {
        font-size: 14px;
        color: #8492a6;
        line-height: 44px;
        font-size: 16px;
    }

    &amp;:last-child {
        border-bottom: none;
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>辅助文字</h3>
        <p>
            用辅助文字直接地表达对应分数，为组件设置
            <code>show-text</code>
            属性会在右侧显示辅助文字。通过设置
            <code>texts</code>
            可以为每一个分值指定对应的辅助文字。
            <code>texts</code>
            为一个数组，长度应等于最大值
            <code>max</code>
            。
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;div class=&quot;row&quot;&gt;
        &lt;span&gt;Helper text:&lt;/span&gt;
        &lt;jk-rate show-text /&gt;
    &lt;/div&gt;
    &lt;div class=&quot;row&quot;&gt;
        &lt;span&gt;Show score:&lt;/span&gt;
        &lt;jk-rate show-score score-template=&quot;{value} points&quot; /&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;style scoped lang=&quot;scss&quot;&gt;
.row {
    padding: 30px 24px;
    overflow: hidden;
    border-bottom: 1px solid #eff2f6;

    span {
        font-size: 14px;
        color: #8492a6;
        line-height: 44px;
        font-size: 16px;
    }

    &amp;:last-child {
        border-bottom: none;
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>自定义 icon</h3>
        <p>
            当有多层评价时，可以用不同类型的 icon 区分评分层级，设置
            <code>icon-classes</code>
            属性可以自定义不同分段的图标。若传入数组，共有 3 个元素，为 3 个分段所对应的类名；若传入对象，可自定义分段，键名为分段的界限值，键值为对应的类名。本例还使用
            <code>void-icon-class</code>
            指定了未选中时的图标类名。
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-rate
        icon-classes=&quot;@(['jk-icon-brush', 'jk-icon-data-analysis', 'jk-icon-present'])&quot;
        colors=&quot;@(['#99A9BF', '#F7BA2A', '#FF9900'])&quot;
        void-icon-class=&quot;jk-icon-brush&quot;
    /&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>半星</h3>
        <p>
            可通过设置
            <code>allowHalf</code>
            属性来设置是否开启半星功能
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-rate allow-half show-score /&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>只读</h3>
        <p>
            只读的评分用来展示分数，允许出现半星，为组件设置
            <code>disabled</code>
            属性表示组件为只读，支持小数分值。此时若设置
            <code>show-score</code>
            ，则会在右侧显示目前的分值。
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;DemoRow&gt;
        &lt;jk-rate value=&quot;3&quot; show-score disabled /&gt;
    &lt;/DemoRow&gt;
    &lt;DemoRow&gt;
        &lt;jk-rate value=&quot;3.7&quot; show-score disabled /&gt;
    &lt;/DemoRow&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>参数</th>
                    <th>说明</th>
                    <th>类型</th>
                    <th>可选值</th>
                    <th>默认值</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>value</td>
                    <td>值</td>
                    <td>number</td>
                    <td>—</td>
                    <td>0</td>
                </tr>
                <tr>
                    <td>class</td>
                    <td>自定义 class 样式</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>max</td>
                    <td>最大分值</td>
                    <td>number</td>
                    <td>—</td>
                    <td>5</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>是否为只读</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>allow-half</td>
                    <td>是否允许半选</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>low-threshold</td>
                    <td>低分和中等分数的界限值，值本身被划分在低分中</td>
                    <td>number</td>
                    <td>—</td>
                    <td>2</td>
                </tr>
                <tr>
                    <td>high-threshold</td>
                    <td>高分和中等分数的界限值，值本身被划分在高分中</td>
                    <td>number</td>
                    <td>—</td>
                    <td>4</td>
                </tr>
                <tr>
                    <td>colors</td>
                    <td>
                        icon 的颜色。若传入数组，共有 3 个元素，为 3 个分段所对应的颜色；若传入对象，可自定义分段，键名为分段的界限值，键值为对应的颜色
                    </td>
                    <td>array/object</td>
                    <td>—</td>
                    <td>['#F7BA2A', '#F7BA2A', '#F7BA2A']</td>
                </tr>
                <tr>
                    <td>void-color</td>
                    <td>未选中 icon 的颜色</td>
                    <td>string</td>
                    <td>—</td>
                    <td>#C6D1DE</td>
                </tr>
                <tr>
                    <td>disabled-void-color</td>
                    <td>只读时未选中 icon 的颜色</td>
                    <td>string</td>
                    <td>—</td>
                    <td>#EFF2F7</td>
                </tr>
                <tr>
                    <td>icon-classes</td>
                    <td>
                        icon 的类名。若传入数组，共有 3 个元素，为 3 个分段所对应的类名；若传入对象，可自定义分段，键名为分段的界限值，键值为对应的类名
                    </td>
                    <td>array/object</td>
                    <td>—</td>
                    <td>['jk-icon-star-on', 'jk-icon-star-on','jk-icon-star-on']</td>
                </tr>
                <tr>
                    <td>void-icon-class</td>
                    <td>未选中 icon 的类名</td>
                    <td>string</td>
                    <td>—</td>
                    <td>jk-icon-star-off</td>
                </tr>
                <tr>
                    <td>disabled-void-icon-class</td>
                    <td>只读时未选中 icon 的类名</td>
                    <td>string</td>
                    <td>—</td>
                    <td>jk-icon-star-on</td>
                </tr>
                <tr>
                    <td>show-text</td>
                    <td>是否显示辅助文字，若为真，则会从 texts 数组中选取当前分数对应的文字内容</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>show-score</td>
                    <td>是否显示当前分数，show-score 和 show-text 不能同时为真</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>text-color</td>
                    <td>辅助文字的颜色</td>
                    <td>string</td>
                    <td>—</td>
                    <td>#1F2D3D</td>
                </tr>
                <tr>
                    <td>texts</td>
                    <td>辅助文字数组</td>
                    <td>array</td>
                    <td>—</td>
                    <td>['极差', '失望', '一般', '满意', '惊喜']</td>
                </tr>
                <tr>
                    <td>score-template</td>
                    <td>分数显示模板</td>
                    <td>string</td>
                    <td>—</td>
                    <td>
                        {value}
                    </td>
                </tr>
            </tbody>
        </table>
        <h3>Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>事件名称</th>
                    <th>说明</th>
                    <th>回调参数</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>change</td>
                    <td>分值改变时触发</td>
                    <td>改变后的分值</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo5 from "../../components/rate/demo5.joker";
import DEMO_JOKER_demo4 from "../../components/rate/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/rate/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/rate/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/rate/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>
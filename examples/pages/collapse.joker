<template>
<div ref='container' class='joker-demo-container'>
<h2>Collapse 折叠面板</h2>
<p>打开 / 折叠展示内容</p>
<h3>基础用法</h3>
<p>基础折叠面板用法。</p>
<DemoContainer component="@(components.DEMO_JOKER_demo1)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div&gt;
        &lt;jk-collapse @change=&quot;collapseChange&quot;&gt;
            &lt;jk-collapse-item title=&quot;一致性&quot;&gt;
                &lt;div&gt;风格一致性：组件应该遵循相同的视觉和交互风格指南。&lt;/div&gt;
                &lt;div&gt;命名一致性：组件和其API的命名应该清晰、一致。&lt;/div&gt;
            &lt;/jk-collapse-item&gt;
            &lt;jk-collapse-item title=&quot;可重用性&quot;&gt;
                &lt;div&gt;独立性：组件应该是自包含的，不依赖于外部的具体实现。&lt;/div&gt;
                &lt;div&gt;参数化：组件应该允许通过参数或属性自定义其行为和外观。&lt;/div&gt;
            &lt;/jk-collapse-item&gt;
            &lt;jk-collapse-item title=&quot;可维护性&quot;&gt;
                &lt;div&gt;清晰的文档：每个组件应有详细的文档说明其用途、接口和使用示例。&lt;/div&gt;
                &lt;div&gt;代码清晰：组件代码应该是可读的，有清晰的结构和注释。&lt;/div&gt;
            &lt;/jk-collapse-item&gt;
            &lt;jk-collapse-item title=&quot;可访问性&quot;&gt;
                &lt;div&gt;符合标准：遵守WAI-ARIA指南，确保组件对辅助技术（如屏幕阅读器）友好。&lt;/div&gt;
                &lt;div&gt;键盘可访问：组件应该可以通过键盘操作。&lt;/div&gt;
            &lt;/jk-collapse-item&gt;
        &lt;/jk-collapse&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    collapseChange(event) {
        console.log(&quot;展开的项：&quot;, event.data);
    }
}
&lt;/script&gt;

&lt;style lang=&quot;scss&quot; scoped&gt;
&lt;/style&gt;
</code></pre>
</DemoContainer>
<h3>手风琴模式</h3>
<DemoContainer component="@(components.DEMO_JOKER_demo2)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div&gt;
        &lt;jk-collapse accordion&gt;
            &lt;jk-collapse-item title=&quot;一致性&quot; name=&quot;1&quot;&gt;
                &lt;div&gt;风格一致性：组件应该遵循相同的视觉和交互风格指南。&lt;/div&gt;
                &lt;div&gt;命名一致性：组件和其API的命名应该清晰、一致。&lt;/div&gt;
            &lt;/jk-collapse-item&gt;
            &lt;jk-collapse-item title=&quot;可重用性&quot; name=&quot;2&quot; disabled&gt;
                &lt;div&gt;独立性：组件应该是自包含的，不依赖于外部的具体实现。&lt;/div&gt;
                &lt;div&gt;参数化：组件应该允许通过参数或属性自定义其行为和外观。&lt;/div&gt;
            &lt;/jk-collapse-item&gt;
            &lt;jk-collapse-item title=&quot;可维护性&quot; name=&quot;3&quot;&gt;
                &lt;div&gt;清晰的文档：每个组件应有详细的文档说明其用途、接口和使用示例。&lt;/div&gt;
                &lt;div&gt;代码清晰：组件代码应该是可读的，有清晰的结构和注释。&lt;/div&gt;
            &lt;/jk-collapse-item&gt;
            &lt;jk-collapse-item title=&quot;可访问性&quot; name=&quot;4&quot;&gt;
                &lt;div&gt;符合标准：遵守WAI-ARIA指南，确保组件对辅助技术（如屏幕阅读器）友好。&lt;/div&gt;
                &lt;div&gt;键盘可访问：组件应该可以通过键盘操作。&lt;/div&gt;
            &lt;/jk-collapse-item&gt;
        &lt;/jk-collapse&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
    };
}
&lt;/script&gt;

&lt;style lang=&quot;scss&quot; scoped&gt;
&lt;/style&gt;
</code></pre>
</DemoContainer>
<h3>自定义标题</h3>
<DemoContainer component="@(components.DEMO_JOKER_demo3)">
<pre><code class="language-html">&lt;template&gt;
    &lt;div&gt;
        &lt;jk-collapse value=&quot;@model.value&quot; accordion&gt;
            &lt;jk-collapse-item name=&quot;1&quot;&gt;
                @section(&quot;title&quot;) {
                    &lt;span&gt;一致性&lt;/span&gt;
                    &lt;jk-icon name=&quot;question&quot; /&gt;
                }
                &lt;div&gt;风格一致性：组件应该遵循相同的视觉和交互风格指南。&lt;/div&gt;
                &lt;div&gt;命名一致性：组件和其API的命名应该清晰、一致。&lt;/div&gt;
            &lt;/jk-collapse-item&gt;
            &lt;jk-collapse-item name=&quot;2&quot; disabled&gt;
                @section(&quot;title&quot;) {
                    &lt;span&gt;可重用性&lt;/span&gt;
                    &lt;jk-icon name=&quot;bell&quot; /&gt;
                }
                &lt;div&gt;独立性：组件应该是自包含的，不依赖于外部的具体实现。&lt;/div&gt;
                &lt;div&gt;参数化：组件应该允许通过参数或属性自定义其行为和外观。&lt;/div&gt;
            &lt;/jk-collapse-item&gt;
            &lt;jk-collapse-item title=&quot;可维护性&quot; name=&quot;3&quot;&gt;
                &lt;div&gt;清晰的文档：每个组件应有详细的文档说明其用途、接口和使用示例。&lt;/div&gt;
                &lt;div&gt;代码清晰：组件代码应该是可读的，有清晰的结构和注释。&lt;/div&gt;
            &lt;/jk-collapse-item&gt;
            &lt;jk-collapse-item title=&quot;可访问性&quot; name=&quot;4&quot;&gt;
                &lt;div&gt;符合标准：遵守WAI-ARIA指南，确保组件对辅助技术（如屏幕阅读器）友好。&lt;/div&gt;
                &lt;div&gt;键盘可访问：组件应该可以通过键盘操作。&lt;/div&gt;
            &lt;/jk-collapse-item&gt;
        &lt;/jk-collapse&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        value: &quot;1&quot;
    };
}
&lt;/script&gt;

&lt;style lang=&quot;scss&quot; scoped&gt;
&lt;/style&gt;
</code></pre>
</DemoContainer>
<h3>Attributes</h3>
<table class="mkd-table">
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>类型</th>
<th>可选值</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>value</td>
<td>当前激活的面板（手风琴模式为string，否则为Array）</td>
<td>string / Array</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>accordion</td>
<td>是否开启手风琴模式</td>
<td>boolean</td>
<td>-</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3>Events</h3>
<table class="mkd-table">
<thead>
<tr>
<th>事件名称</th>
<th>说明</th>
<th>回调参数</th>
</tr>
</thead>
<tbody>
<tr>
<td>change</td>
<td>当前激活面板改变时触发(如果是手风琴模式，参数 activeNames 类型为string，否则为Array)</td>
<td>返回激活的面板name值</td>
</tr>
</tbody>
</table>
<h3>Item Attributes</h3>
<table class="mkd-table">
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>类型</th>
<th>可选值</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>name</td>
<td>唯一标识符</td>
<td>string</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>title</td>
<td>标题</td>
<td>string</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>disabled</td>
<td>是否禁用</td>
<td>boolean</td>
<td>-</td>
<td>false</td>
</tr>
</tbody>
</table>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../common/components/bottom-nav.joker";
import DEMO_JOKER_demo3 from '../components/collapse/demo3.joker';
import DEMO_JOKER_demo2 from '../components/collapse/demo2.joker';
import DEMO_JOKER_demo1 from '../components/collapse/demo1.joker';
export default class extends Component {
components={
BottomNav,
DEMO_JOKER_demo3,
DEMO_JOKER_demo2,
DEMO_JOKER_demo1
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>
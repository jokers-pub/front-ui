<template>
    <li class="@(['jk-timeline-item', props.size, props.class])">
        <div class="tail"></div>
        @if(!$sections.dot) {
            <div class="@(['node', props.type])" style="@(props.color ? 'background-color:' + props.color : '')">
                @if(props.icon) {
                    <i class="icon @props.icon"></i>
                }
            </div>
        }
        @if($sections.dot) {
            <div class="dot">
                @RenderSection("dot")
            </div>
        }
        <div class="wrapper">
            @if(!props.hideTimestamp && props.placement === "top" && props.timestamp) {
                <div class="timestamp is-top">
                    @props.timestamp
                </div>
            }
            <div class="content">
                @RenderSection()
            </div>
            @if(!props.hideTimestamp && props.placement === "bottom" && props.timestamp) {
                <div class="timestamp is-bottom">
                    @props.timestamp
                </div>
            }
        </div>
    </li>
</template>
<script>
import { Component } from "@joker.front/core";

export default class extends Component<{
    class: any;
    timestamp: string;
    hideTimestamp: boolean;
    placement: string;
    type: string;
    color: string;
    size: string;
    icon: string;
}> {
    propsOption = {
        placement: "bottom",
        size: "normal"
    };
}
</script>

<style lang="scss" scoped>
.jk-timeline-item {
    position: relative;
    padding-bottom: 20px;
    &:last-child {
        .tail {
            display: none;
        }
    }
    .wrapper {
        position: relative;
        padding-left: 28px;
        top: -3px;
        .content {
            line-height: 28px;
            color: var(--jk-color-text-regular);
        }
        .timestamp {
            color: var(--jk-color-text-secondary);
            line-height: 1;
            font-size: 13px;
            &.is-top {
                margin-bottom: 8px;
                padding-top: 4px;
            }
            &.is-bottom {
                margin-top: 8px;
            }
        }
    }
    .tail {
        position: absolute;
        left: 4px;
        top: 5px;
        height: 100%;
        border-left: 2px solid var(--jk-background-color-base);
    }
    .node {
        position: absolute;
        background-color: var(--jk-background-color-base);
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        top: 5px;
        .icon {
            color: var(--jk-background-color-default);
            font-size: 13px;
        }

        &.primary {
            background-color: var(--jk-color-primary);
        }

        &.success {
            background-color: var(--jk-color-success);
        }

        &.warning {
            background-color: var(--jk-color-warning);
        }

        &.danger {
            background-color: var(--jk-color-danger);
        }

        &.info {
            background-color: var(--jk-color-info);
        }
    }
    .dot {
        position: absolute;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &.normal {
        .node {
            left: -1px;
            width: 12px;
            height: 12px;
        }
    }
    &.large {
        .node {
            left: -2px;
            width: 14px;
            height: 14px;
        }
    }
    &.small {
        .node {
            left: 0px;
            width: 10px;
            height: 10px;
        }
    }
    &.mini {
        .node {
            left: 1px;
            width: 8px;
            height: 8px;
        }
        .wrapper {
            .content {
                line-height: 24px;
            }
        }
    }
}
</style>
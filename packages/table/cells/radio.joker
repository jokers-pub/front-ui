<template>
    @if(!props.isHeader) {
        <JokerRadio
            hideLable
            value="@selectedRowIndex"
            @click.stop
            @change.stop="handleRadioChange"
            disabled="@disabled"
        />
    }
</template>
<script>
import { Component, VNode, combinedReply } from "@joker.front/core";
import JokerRadio from "../../radio/radio.joker";
import { componentName } from "../../utils";
import { ColumnType, Store } from "../store";

export default class extends Component<{
    isHeader: boolean;
    row: any;
    column: ColumnType;
}> {
    components = {
        JokerRadio
    };

    get table() {
        return this.$rootVNode?.closest(
            (n) => n instanceof VNode.Component && n.component.name === componentName("table")
        )?.component;
    }
    get store(): Store {
        return this.table!.store;
    }

    get selectedRowIndex() {
        if (this.table.store.data.tableData) {
            return this.store?.data.selectedRows.has(this.props.row);
        }
        return false;
    }

    get disabled() {
        if (this.props.column?.disabledMethod) {
            if (this.props.column?.disabledMethod(this.props.row) === true) {
                return true;
            }
        }

        return false;
    }
    handleRadioChange() {
        combinedReply(() => {
            this.store?.data.selectedRows.clear();
            this.store?.data.selectedRows.add(this.props.row);
        });

        this.table?.triggerSelectedRowChange();
    }
}
</script>